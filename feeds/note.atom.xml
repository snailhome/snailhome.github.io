<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>StepUp</title><link href="http://snailhome.github.io/" rel="alternate"></link><link href="/feeds/note.atom.xml" rel="self"></link><id>http://snailhome.github.io/</id><updated>2016-10-12T21:35:00+08:00</updated><entry><title>Django的view23事</title><link href="http://snailhome.github.io/note/django_view.html" rel="alternate"></link><published>2016-10-12T21:35:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-10-12:note/django_view.html</id><summary type="html">&lt;p&gt;以&lt;code&gt;demo&lt;/code&gt;app为例。&lt;/p&gt;
&lt;p&gt;view的一般步骤
1. 构造 &lt;code&gt;Context&lt;/code&gt;，这是给模板传值的变量
2. 返回一个以模板构造生成的页面&lt;/p&gt;
&lt;h2 id="dea12e"&gt;用 &lt;code&gt;render&lt;/code&gt; 还是用 &lt;code&gt;render_to_response&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;render() 结合一个给定的模板和一个给定的上下文字典，并返回一个渲染后的 HttpResponse 对象。&lt;/p&gt;
&lt;p&gt;render() 与以一个强制使用RequestContext的context_instance 参数调用render_to_response() 相同。&lt;/p&gt;
&lt;p&gt;所以，如果使用 &lt;code&gt;render&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hello The World!'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'demo/hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果使用 &lt;code&gt;render_to_response&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_to_response&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.template&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RequestContext&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hello The World!'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'demo/hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要好好比较一下差异。&lt;/p&gt;
&lt;h2 id="33f747"&gt;@装饰器&lt;/h2&gt;
&lt;p&gt;在一些view里我们经常要做一些重复性的工作，如判断是否已登录，否则跳转到登录页面，这些操作都必须在开始功能代码前进行，那我们就可以用 &lt;code&gt;@装饰器&lt;/code&gt; 来减少代码。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;reporter_is_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_se_reporter_is_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# 非登录状态的轩到登录页面&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reporter_is_login&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resolved_login_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'demo:login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolved_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# 以下功能代码&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;view2&lt;/code&gt;, &lt;code&gt;view3&lt;/code&gt;的前端也都是这样的操作，那么我们用装饰器来实现&lt;/p&gt;
&lt;p&gt;在 &lt;code&gt;demo&lt;/code&gt; app目录下创建文件 &lt;code&gt;decorator,py&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reporter_login_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'demo:login'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 报修未登录跳转到登录页面的装饰器&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nd"&gt;@functools.wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;reporter_is_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_se_reporter_is_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# 非登录状态的轩到登录页面&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reporter_is_login&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;resolved_login_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reporter_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolved_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 对应wrapper的参数&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后我们在需要做登记判断的 &lt;code&gt;view&lt;/code&gt; 前加上装饰器，如修改 &lt;code&gt;view1&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;demo.decorator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;demo_login_required&lt;/span&gt;

&lt;span class="nd"&gt;@demo_login_required&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 以下功能代码&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="04bd0c"&gt;过滤器&lt;/h2&gt;</summary><category term="django"></category><category term="view"></category></entry><entry><title>Django的Form验证的一个小问题</title><link href="http://snailhome.github.io/note/django_form_is_valid.html" rel="alternate"></link><published>2016-10-12T20:48:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-10-12:note/django_form_is_valid.html</id><summary type="html">&lt;p&gt;在学习The django book 的时候，运行下面代码&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;出现了下面的错误
'ContactForm' object has no attribute 'cleaned_data'&lt;/p&gt;
&lt;p&gt;但是实际上这个方法是存在的，后来检查代码发现把is_valid()后面的括号给遗漏掉了，就出现这个问题，后来加上就好了，&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;记录以备忘&lt;/p&gt;</summary><category term="django"></category><category term="is_valid()"></category></entry><entry><title>PyCharm 4.5.4一个运行错误的处理</title><link href="http://snailhome.github.io/note/run_error_in_pycharm.html" rel="alternate"></link><published>2016-02-21T14:21:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-21:note/run_error_in_pycharm.html</id><summary type="html">&lt;h1 id="8e3a7b"&gt;PyCharm 4.5.4一个运行错误的处理&lt;/h1&gt;
&lt;p&gt;在openSUSE Leap 42.1中按惯例解压，进bin，运行&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ~/pycharm/bin/pycharm.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;竟然出现了错误：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=350m; support was removed in 8.0

Startup Error: Unable to detect graphics environment
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在其它Linux发行版都没有问题呀！&lt;/p&gt;
&lt;p&gt;搜索一番，无果。&lt;/p&gt;
&lt;p&gt;后来不经意使用&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; ~/pycharm/bin/pycharm.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常启动了，好诡异，记录一下以备忘。&lt;/p&gt;</summary><category term="pycharm"></category></entry><entry><title>调教Retext</title><link href="http://snailhome.github.io/note/do_someting_after_install_retext.html" rel="alternate"></link><published>2016-02-20T21:29:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-20:note/do_someting_after_install_retext.html</id><summary type="html">&lt;h1 id="e054af"&gt;调教Retext&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Retext几番安装后又删除，总是因为那难以接受的Markdown预览效果，后来才发现，原来Retext也是可以调教成心目中的样子，&lt;strong&gt;原来Retext也可以这么美&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面的很多操作都是结合网上教程，再加上在&lt;code&gt;openSUSE Leap 42.1&lt;/code&gt;系统上的实际操作的结果记录下来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="b64d7f"&gt;安装Retext&lt;/h2&gt;
&lt;p&gt;从openSUSE官网软件库搜索&lt;code&gt;Retext&lt;/code&gt;并下载安装：&lt;a href="https://software.opensuse.org/421/zh_CN"&gt;https://software.opensuse.org/421/zh_CN&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="49a2b0"&gt;调教需知&lt;/h2&gt;
&lt;p&gt;Retext的配置文件在&lt;code&gt;~/.config/ReText project/ReText.conf&lt;/code&gt;
Retext的markdown扩展语法设置文件在&lt;code&gt;~/.config//markdown-extensions.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retext的配置项可以参考&lt;a href="https://sourceforge.net/p/retext/wiki/Configuration%20file/"&gt;官网的说明&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="21f4e1"&gt;Retext的配置文件&lt;/h2&gt;
&lt;p&gt;这是我的Retextr的配置内容&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.config/ReText project/ReText.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[General]
appStyleSheet=~/.config/ReText project/-style.qss
autoSave=true
editorFont=Monospace
editorFontSize=11
font=Monospace
fontSize=14
highlightCurrentLine=true
lineNumbersEnabled=true
previewState=true
recentFileList=/home/snail/env2p/blog/content/note/do_someting_after_install_retext.md, /home/snail/env2p/blog/content/note/extend_admin_in_django.md, /home/snail/env2p/blog/content/note/markdown.md
restorePreviewState=true
styleSheet=~/.config/ReText project/markdown7.css
tabInsertsSpaces=true
tabWidth=4
useWebKit=true
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;appStyleSheet&lt;/strong&gt; 项是设置界面风格的,这里的style.qss我是取自&lt;code&gt;QDarkStyleSheet&lt;/code&gt;里的一套暗黑风格的界面&lt;a href="https://github.com/ColinDuquesnoy/QDarkStyleSheet/blob/master/qdarkstyle/style.qss"&gt;style.css&lt;/a&gt;，你可以下载下来放在&lt;code&gt;~/.config/ReText project/&lt;/code&gt;里，并在配置文件里指向它。但我的系统是浅色主题所以没有采用它。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;autoSave&lt;/strong&gt; 项是确定是否自动保存。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;editorFont&lt;/strong&gt; 项是设置编辑窗口字体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;editorFontSize&lt;/strong&gt; 项是设置编辑窗口字体大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;font&lt;/strong&gt; 项是设置预览窗口字体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fontSize&lt;/strong&gt; 项是设置预览窗口字体大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;handleWebLinks&lt;/strong&gt; 项是否指定web链接，false为外部浏览器打开链接，true为在Retext预览界面里打开链接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;highlightCurrentLine&lt;/strong&gt; 项是确定是否高亮当前编辑行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lineNumbersEnabled=true&lt;/strong&gt; 项是确定是否显示行号。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;previewState&lt;/strong&gt; 项是确定预览状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recentFileList&lt;/strong&gt; 项是保存最近的打开的文件历史。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;restorePreviewState&lt;/strong&gt; 项是确定是否恢复上次关闭Retext时的预览窗口状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;styleSheet&lt;/strong&gt; 项是指定预览窗口的风格模板，这里的markdown7.css是取得&lt;a href="https://github.com/jasonm23/markdown-css-themes"&gt;markdown-css-themes&lt;/a&gt;的&lt;a href="https://github.com/jasonm23/markdown-css-themes/blob/gh-pages/markdown7.css"&gt;markdown7.css&lt;/a&gt; ，你可以下载下来放在&lt;code&gt;~/.config/ReText project/&lt;/code&gt;里，并在配置文件里指向它。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabInsertsSpaces&lt;/strong&gt; 项是确认是否把TAB键转换成空格。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabWidth&lt;/strong&gt; 项是指定TAB键的字符个数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;useWebKit&lt;/strong&gt; 项是确定是否开启 QtWebKit engine，设置为true预览效果会较好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="56cc61"&gt;添加Markdown扩展&lt;/h2&gt;
&lt;p&gt;正常安装&lt;code&gt;Python-Markdown&lt;/code&gt;后，就有一些扩展可以使用，这些扩展可以参考&lt;a href="https://pythonhosted.org/Markdown/extensions/"&gt;官网说明&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里列表了几个常用的扩展项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;codehilite&lt;/strong&gt; 添加语法高亮扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;footnotes&lt;/strong&gt;   添加脚注扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;meta&lt;/strong&gt; 添加预览时消除meta题头的扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tables&lt;/strong&gt; 添加表格扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;toc&lt;/strong&gt; 添加目录扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要打开这些扩展，编辑Retext的Markdown扩展配置文件&lt;sup id="fnref:ext"&gt;&lt;a class="footnote-ref" href="#fn:ext" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.config//markdown-extensions.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;codehilite
footnotes
meta
tables
toc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存扩展配置文件，重新打开Retext后即可生效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;codehilite&lt;/strong&gt; 语法高亮&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;程序/语句段一个TAB缩进或者&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```python  
……  
```
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;footnotes&lt;/strong&gt; 脚注&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要脚注的后面&lt;code&gt;[^1]&lt;/code&gt;
在文后添加脚注说明&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[^1]: 这里是脚注说明
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;这里的&lt;code&gt;1&lt;/code&gt;可以是任意一个字串，但脚注及其说明要对应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;meta&lt;/strong&gt; 预览时消除meta题头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加后在预览时就不会显示meta题头了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tables&lt;/strong&gt; 允许表格&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;|商品|价格|
|--|--|
|番茄|1.5|
|马铃薯|0.8|
|娃娃菜|1.8|
&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;商品&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;番茄&lt;/td&gt;
&lt;td&gt;1.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;马铃薯&lt;/td&gt;
&lt;td&gt;0.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;娃娃菜&lt;/td&gt;
&lt;td&gt;1.8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;toc&lt;/strong&gt; 添加目录
在需要添加目录的地放放置&lt;code&gt;[TOC]&lt;/code&gt;即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="9e68fa"&gt;添加第三方Markdown扩展&lt;/h2&gt;
&lt;h3 id="9edcb1"&gt;&lt;strong&gt;mathjax&lt;/strong&gt; 添加数学公式&lt;/h3&gt;
&lt;p&gt;网上介绍&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libjs-mathjax
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不过这是Debian系统的安装方法，但openSUSE里怎么也找不到&lt;code&gt;libjs-mathjax&lt;/code&gt;，后来在&lt;code&gt;Python-Markdown&lt;/code&gt;的&lt;a href="https://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions"&gt;第三方扩展&lt;/a&gt;里找到了&lt;code&gt;python-markdown-math&lt;/code&gt;，总算解决了&lt;code&gt;mathjax&lt;/code&gt;的问题。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install python-markdown-math
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;s
然后一样的添加&lt;code&gt;mathjax&lt;/code&gt;到Retext的扩展配置文件里。
要看到公式的效果，还必须在&lt;code&gt;编辑&lt;/code&gt;菜单下开启&lt;code&gt;使用WebKit渲染&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;再然后我们添加一个公式&lt;code&gt;$a^2+b^2=c^2$&lt;/code&gt;，看看效果：$a^2+b^2=c^2$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有点讨厌，开了&lt;code&gt;mathjax&lt;/code&gt;后，如果有公式存在，预览刷新后都会回到预览页面都是回到页面顶部，而且还会刷新闪动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="e558cd"&gt;好了，现在可以装比了～～&lt;/h2&gt;
&lt;hr/&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:ext"&gt;
&lt;p&gt;也可以在 Edit -&amp;gt; Preferences -&amp;gt; Markdown syntax extensions 框中添加。所有的扩展的名称都要小写，即Markdown扩展后的名称，如脚注：markdown.extensions.footnotes，则使用名称footnotes；另外，两个扩展之间用小写逗号分隔。 &lt;a class="footnote-backref" href="#fnref:ext" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry><entry><title>Sublime Text 3 安装配置记录</title><link href="http://snailhome.github.io/note/setting_sublime_text3.html" rel="alternate"></link><published>2016-02-20T21:29:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-20:note/setting_sublime_text3.html</id><summary type="html">&lt;h1 id="cae213"&gt;Sublime Text 3 安装配置记录&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id="d22849"&gt;Sublime Text 3 安装&lt;/h2&gt;
&lt;p&gt;到openSUSE 官网下载安装：
&lt;a href="https://software.opensuse.org/package/sublime-text-beta"&gt;https://software.opensuse.org/package/sublime-text-beta&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="0101f9"&gt;配置Sublime Text 3&lt;/h2&gt;</summary></entry><entry><title>openSUSE下uWSGI安装过程记录</title><link href="http://snailhome.github.io/note/uwsgi_in_opensuse.html" rel="alternate"></link><published>2016-02-06T23:44:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-06:note/uwsgi_in_opensuse.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文操作在openSUSE leap 42.1 Gnome和KDE环境下测试通过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="f411d0"&gt;说明&lt;/h2&gt;
&lt;p&gt;uWSGI用于Django项目的运行&lt;br/&gt;
登录用户：snail&lt;br/&gt;
项目目录：/home/snail/e3dj19/mysite&lt;br/&gt;
项目名称：mysite&lt;/p&gt;
&lt;h2 id="1e1d9a"&gt;安装uWSGI&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in gcc make python-devel python3-devel
sudo pip install uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 不要用搜索官网.ymp软件包的方式安装，再应用pip的方式安装uWSGI。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="07d521"&gt;添加Virtualenv环境及Django项目&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
virtualenv -p python3 e3dj19
&lt;span class="nb"&gt;cd&lt;/span&gt; e3dj19
&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate

pip install django

django-admin startproject mysite
&lt;span class="nb"&gt;cd&lt;/span&gt; mysite
./manage.py startapp blog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑Django项目&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py runserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;显示正常后再继续&lt;/p&gt;
&lt;h2 id="4b5d29"&gt;添加uWSGI配置文件&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /etc/uwsig
sudo mkdir /etc/uwsig/vassals
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑通用uwsgi配置模板&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim uwsgi.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;uwsgi.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
# Django项目的uwsgi配置模板
# 调用模板使用以下语句：
# prj-home = 项目目录绝对路径
# prj-name = 项目名称
# ini = 本模板文件.ini
#
# 将配置文件命名为Django的项目名
# uwsgi单独使用用http，用于单独测试用
#http       = :8000
# uwsgi在Nginx中做中间件用socket
#socket      = /tmp/uwsgi-%(prj-name).sock
socket      = :8000

pidfile     = /tmp/uwsgi-%(prj-name).pid
chdir       = %(prj-home)
home        = %(prj-home)/..
module      = %(prj-name).wsgi


master      = true
processes   = 4
threads      = 2
buffer-size = 40960
#stats      = :9191
vacuum      = true
#daemonize  = /tmp/uwsgi-%(prj-name).log 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑django项目的uwsgi配置实例&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/uwsgi/vassals/e3dj19-mysite.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;e3dj19-mysite.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
prj-home   = /home/snail/e3dj19/mysite
prj-name   = mysite
ini        = /etc/uwsgi/uwsgi.ini
socket      = :9000
# 下面添加要变更或新增的uWSGI配置项
# 添加ini项所指文件中有的配置项如threads项则为变更
# threads      = 20
# 添加文件中没有的配置项如stats项则为新增
# stats      = :9191
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="cbf9cb"&gt;测试uWSGI的单位个项目运行情况&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi /etc/uwsgi/vassals/e3dj19-mysite.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;h2 id="21aa3d"&gt;添加uWSGI的Emperor模式&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi --emperor /etc/uwsgi/vassals/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/uwsgi/emperor.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;emperor.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
emperor = /etc/uwsgi/vassals
uid = nginx
gid = nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试uWSGI的Emperor模式的运行情况&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi /etc/uwsgi/emperor.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;p&gt;至此uWSGI配置多个Django应用同步运行的配置已正确配置，以后新的Django应用只需类似/etc/uwsgi/vassals/e3dj19-mysite.ini配置即可&lt;/p&gt;
&lt;h2 id="68104a"&gt;添加到systemd&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/systemd/system/uwsgi.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;uwsgi.service配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]
Description=uWSGI Emperor
After=syslog.target

[Service]
#User=root
Type=notify
ExecStart=/usr/bin/uwsgi --ini /etc/uwsgi/emperor.ini
#RuntimeDirectory=uwsgi # Requires systemd version 211 or newer
Restart=always
KillSignal=SIGQUIT
StandardError=syslog
NotifyAccess=all

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动uWSGI服务并测试状态&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start uwsgi.service
systemctl status uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务运行正常&lt;/p&gt;
&lt;h1 id="e48e76"&gt;安装配置nginx&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in nginx
sudo nginx -v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以显示nginx版本号&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/nginx/nginx.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nginx.conf配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http {
    upstream django_uwsgi {
        # 这是sock文件模式
        #server unix:///tmp/uwsgi-mysite.sock;
        # 这是端口监听模式
        server 127.0.0.1:9000;
    }

    server {
        listen       80;
        ....
        location / {
            uwsgi_pass  django_uwsgi;
            include     uwsgi_params;
        }
        ....


    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动nginx服务&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开浏览器输入127.0.0.1，正常显示Djnago页面。
至此，uWSGI的配置完成，并且测试成功通过。&lt;/p&gt;</summary><category term="uWSGI"></category><category term="openSUSE"></category></entry><entry><title>调教openSUSE Leap 42.1</title><link href="http://snailhome.github.io/note/setting_opensuse.html" rel="alternate"></link><published>2016-01-31T23:02:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-01-31:note/setting_opensuse.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;这两天又抽风把 &lt;code&gt;Linux Mint&lt;/code&gt; 系统改装成了 &lt;code&gt;openSUSE Leap 42.1&lt;/code&gt;，就着安装使用的情况，做一些记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="4300aa"&gt;&lt;code&gt;Gnome3&lt;/code&gt; 和 &lt;code&gt;KDE5&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;按默认桌面安装了&lt;code&gt;KDE5&lt;/code&gt;，&lt;code&gt;KDE&lt;/code&gt;看似自带了很多功能，各个方面都可以配置，但个人感觉带是太花俏，于是有重装成 &lt;code&gt;Gnome3&lt;/code&gt;，感觉还是 &lt;code&gt;Gnome3&lt;/code&gt; 干净，简洁。&lt;/p&gt;
&lt;p&gt;感觉刚装的 &lt;code&gt;openSUSE&lt;/code&gt; 比其他发行版带的东西更少，好吧，重新再装起来。&lt;/p&gt;
&lt;h2 id="4fd8a1"&gt;系统更新&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;openSUSE&lt;/code&gt; 安装使用 &lt;code&gt;zypper&lt;/code&gt; 命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好奇怪，刚装的系统更新出错，非得重启以后才能更新&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;更改国内源并更新软件
我用的是中科大源，直接终端运行以下命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper mr -da
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/oss USTC:42.1:OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/non-oss USTC:42.1:NON-OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/oss USTC:42.1:UPDATE-OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/non-oss USTC:42.1:UPDATE-NON-OSS
sudo zypper ref
sudo zypper up
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;系统更新&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper up
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;搜索软件包，如&lt;code&gt;virutalbox&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper se virtualbox
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;安装软件，如&lt;code&gt;Virtualbox&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in virtualbox virtualbox-qt
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="a5e9b0"&gt;个人必备的gnome扩展&lt;/h2&gt;
&lt;p&gt;工具 -&amp;gt; 优化工具 -&amp;gt; 扩展 -&amp;gt; 获取得多扩展&lt;/p&gt;
&lt;p&gt;安装后可能需要自己设置一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hide top bar —— 全屏自动隐藏顶栏,缺少这个gnome3没法用&lt;/li&gt;
&lt;li&gt;Clipboard Indicator —— 剪切板&lt;/li&gt;
&lt;li&gt;Media player indicator —— 显示音乐播放器的状态&lt;/li&gt;
&lt;li&gt;Battery status —— 显示电池电量的百分比&lt;/li&gt;
&lt;li&gt;Netspeed —— 在顶栏上显示网速&lt;/li&gt;
&lt;li&gt;Removable Drive Menu —— 在顶栏显示移动盘图标&lt;/li&gt;
&lt;li&gt;taskbar —— 顶栏颜色等&lt;/li&gt;
&lt;li&gt;user themes —— 启用自定义的shell主题&lt;/li&gt;
&lt;li&gt;Lunar Calendar —— 阴历（依赖opensuse:typelib-1_0-LunarDate-2_0）&lt;/li&gt;
&lt;li&gt;Todo.txt ——  一个任务/待办项的小工具
你们可以自己找扩展……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fbc224"&gt;安装图标主题&lt;/h2&gt;
&lt;p&gt;我这里安装的是一个图标主题 &lt;code&gt;numix-icon-theme-circle&lt;/code&gt;，opensuse官网下载dvd那里（https://software.opensuse.org/421/zh_CN）搜就行，这样最方便了，（推荐这样，更方便。）&lt;/p&gt;
&lt;h2 id="b3454c"&gt;安装外观主题&lt;/h2&gt;
&lt;p&gt;同图标主题一样，这里搜索一个 &lt;code&gt;arc-theme&lt;/code&gt;，然后在 &lt;code&gt;工具 -&amp;gt; 优化工具-&amp;gt; 外观&lt;/code&gt; 的 GTK+ 和 Shell主题可以设置这个主题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加Packman源，安装chromium和pepperflash
像flash、ffmpeg这些非自由版本软件只能通过Packman源安装，flash是上网必备插件这点不用我说吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper ar http://mirrors.hust.edu.cn/packman/suse/openSUSE_Leap_42.1/ Packman
sudo zypper ref
sudo zypper in chromium chromium-pepper-flash
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;安装VLC播放器
增加VLC源，用zypper或yast安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper ar http://download.videolan.org/pub/vlc/SuSE/Leap_42.1/ VLC
sudo zypper ref
sudo zypper in vlc
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;添加输入法
系统自带的五笔输入法是&lt;code&gt;五笔大字集&lt;/code&gt;，但候选栏里带常出现方块字，而且不能五笔拼音混打，安装个五笔拼音输入法方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in fcitx-table-cn-wubi-pinyin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后进fcitx的‘配置当前输入法`添加、调整输入法项吧。&lt;/p&gt;
&lt;h2 id="88b890"&gt;安装 &lt;code&gt;WPS&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;下载RPM文件：&lt;a href=""&gt;http://kdl.cc.ksosoft.com/wps-community/download/a20/wps-office-10.1.0.5444-1.a20.x86_64.rpm&lt;/a&gt;
双击下载的RPM文件即可开始安装
首次打开时会提示缺少字体文件，从我的百度云盘下载&lt;a href="http://pan.baidu.com/s/1gdSp53H"&gt;WPS字体&lt;/a&gt;吧
解压后把里面的&lt;code&gt;*.ttf&lt;/code&gt;复制到&lt;code&gt;~/.fonts&lt;/code&gt;里就可以了。&lt;/p&gt;
&lt;h2 id="ecaadc"&gt;安装Wine&lt;/h2&gt;
&lt;p&gt;直接zypper吧&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in wine
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="5a0afc"&gt;其它&lt;/h2&gt;
&lt;p&gt;其它优化最后附上......&lt;/p&gt;
&lt;h2 id="eee83a"&gt;资源&lt;/h2&gt;
&lt;p&gt;我们需要记住一些资源：
主站：
&lt;a href=""&gt;http://www.suse.org.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;折腾指南：
&lt;a href=""&gt;https://lug.ustc.edu.cn/sites/opensuse-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中文社区：
&lt;a href=""&gt;https://forum.suse.org.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;仓库:
&lt;a href=""&gt;http://software.opensuse.org/search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鸟哥：
&lt;a href=""&gt;http://vbird.dic.ksu.edu.tw/&lt;/a&gt;&lt;/p&gt;</summary><category term="openSUSE"></category></entry><entry><title>WPS for Linux 安装手记</title><link href="http://snailhome.github.io/note/wps_4_linux.html" rel="alternate"></link><published>2015-10-30T00:13:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-30:note/wps_4_linux.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt; 我听说一个好东西Kingsoft Office（译注：就是WPS），所以我想在我的Linux上试试。我怎样才能安装Kingsoft Office呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kingsoft Office 是一套办公套件，支持多个平台，包括Windows, Linux, iOS 和 Android。它包含三个组件：Writer（WPS文字）用来文字处理，Presentation（WPS演示）支持幻灯片，Spereadsheets（WPS表格）是电子表格。其使用免费增值模式，其中基础版本是免费使用。比较其他的linux办公套件，如LibreOffice、 OpenOffice，其最大优势在于，Kingsoft Office能最好的兼容微软的Office（译注：版权问题？了解下wps和Office的历史问题，可以得到一些结论）。因此如果你需要在windows和linux平台间交互，Kingsoft office是一个很好的选择。&lt;/p&gt;
&lt;p&gt;WPS for Linux 官方下载地址： &lt;a href="http://wps-community.org/download.html"&gt;http://wps-community.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="38983c"&gt;CentOS, Fedora 或 RHEL中安装Kingsoft Office&lt;/h2&gt;
&lt;p&gt;在官方页面下载RPM文件。&lt;/p&gt;
&lt;p&gt;需要使用yum命令并用"localinstall"选项来本地安装这个RPM包&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum localinstall kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意不要使用rpm命令安装。否者，你会得到依赖错误，而且很难解决：&lt;/p&gt;
&lt;p&gt;错误: 依赖失败:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;libICE.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libSM.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libX11.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libXext.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libXrender.so.1 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libc.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基于Red Hat的发行版有多重库支持。如果你要想安装的RPM包是32位的并有32位库依赖（你的系统是64位的），一个很好的解决方法就是使用yum来安装。只要RPM在构建时候已经添加所有依赖关系，yum就可以自动使用yum库解决依赖关系。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="5bd1a0"&gt;Debian, Ubuntu 和 Linux Mint 中安装Kingsoft Office&lt;/h2&gt;
&lt;p&gt;在官方页面下载DEB包。官方RPM包同样只支持32位版本linux，但是你可以在64位中安装。&lt;/p&gt;
&lt;p&gt;DEB包同样遇到一堆依赖。因此使用gdebi命令来代替dpkg来自动解决依赖。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install gdebi-core
$ sudo gdebi kingsoft-office_9.1.0.4244~a12p3_i386.deb 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 Kingsoft Office&lt;/p&gt;
&lt;p&gt;安装完成后，你就可以在桌面管理器轻松启动Witer（WPS文字）, Presentation（WPS演示）, and Spreadsheets（WPS表格）。&lt;/p&gt;
&lt;p&gt;不但如此，你也可以在命令行中启动Kingsoft Office。&lt;/p&gt;
&lt;p&gt;启动Wirter（WPS文字），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wps &lt;span class="o"&gt;(&lt;/span&gt;译注：原文丢失此命令&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动Presentation（WPS演示），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wpp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动Spreadsheets（WPS表格），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ et
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="9b6d1a"&gt;安装缺失的字体&lt;/h2&gt;
&lt;p&gt;首次运行wps时会提示缺失字体：wingding、wingding2、wingding3、webdings、MT Extra&lt;/p&gt;
&lt;p&gt;字体文件可以从Windows系统的&lt;code&gt;C:\Windows\fonts&lt;/code&gt;复制，复制到&lt;code&gt;～/.fonts&lt;/code&gt;，没有目录就创建一个啦。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS. 你也可以在下面的&lt;a href="http://pan.baidu.com/s/1i4yJHXj"&gt;百度云&lt;/a&gt;里找到这些字体。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="WPS"></category></entry><entry><title>从Windows平台到Linux平台的迁移</title><link href="http://snailhome.github.io/note/windows_to_linux.html" rel="alternate"></link><published>2015-10-29T18:40:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-29:note/windows_to_linux.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;从wWindows平台到Linux平台的迁移，不是嘴皮子说说就可以了，对于完全脑盲的人，也许简单；可以对于已经在Windows平台已经有一定使用基础的人来说，必须有替代的产品才会有迁移的动力……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对比了从Windows到Linux迁移过程中应用替代方面的艰辛，在下面罗列一些各个专业方面的应用、工具，给自己一个留存，也给后人一些经验～&lt;/p&gt;
&lt;h2 id="06588a"&gt;系统篇&lt;/h2&gt;
&lt;p&gt;既然是迁移到Linux，那么系统当然是Liunx了，可以Linux的发行版本太多，选择的余地也很大，而且针对不同的应用场景，还有不同的选择。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器用途： CentOS7.1&lt;/li&gt;
&lt;li&gt;个人桌面： Linux Mint 17.2、Ubuntu 15.10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6b21cf"&gt;办公应用篇&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WPS for Linux 9.1&lt;/li&gt;
&lt;li&gt;LibreOffice 4.4.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ee3d60"&gt;开发工具编辑器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PyCharm(收费)4.5.4&lt;/li&gt;
&lt;li&gt;SublimeText3.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="bcebb2"&gt;Markdown编辑器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Haroopad 0.13.1&lt;/li&gt;
&lt;li&gt;Retext&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="01bc63"&gt;局域网通讯&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IPTux&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="4e54b3"&gt;下载工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;uGet&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6b72a4"&gt;Windows模拟器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Wine&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="7fea6e"&gt;虚拟机&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="912302"&gt;浏览器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FireFox 41&lt;/li&gt;
&lt;li&gt;Chromium 45&lt;/li&gt;
&lt;/ul&gt;</summary><category term="平台迁移"></category></entry><entry><title>Linux下安装Haroopad</title><link href="http://snailhome.github.io/note/install_haroopad_on_linux.html" rel="alternate"></link><published>2015-10-28T23:02:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-28:note/install_haroopad_on_linux.html</id><summary type="html">&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;下安装&lt;code&gt;haroopad&lt;/code&gt;还是比较简单的。&lt;/p&gt;
&lt;p&gt;由于我用的是 &lt;code&gt;Linux Mint 17.2&lt;/code&gt;， 是基于 &lt;code&gt;Ubuntu 14.04&lt;/code&gt; 的发行版本，所以只要下载 &lt;code&gt;.deb&lt;/code&gt; 的安装包就可以安装了。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget -c https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-x64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;虽然安装包只有40M，可以下载速度实在太慢，好久才下全。&lt;/p&gt;
&lt;p&gt;下载完成后直接双击安装包就可以安装了，简单～&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另外说下&lt;code&gt;Haroopad&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Haroopad&lt;/code&gt;是我用过&lt;code&gt;Markdown&lt;/code&gt;编辑器是比较满意的工具了，而且支持Win/Linux，这点我比较喜欢，而且就试用的情况，感觉Linux版本比Win版本用着更稳定，因为Win版本在一些机子上还有显示的问题，所以感觉就不太爽。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Haroopad&lt;/code&gt;对&lt;code&gt;Markdown&lt;/code&gt;语法的支持没得说的，都不知道要比&lt;code&gt;Retext&lt;/code&gt;好多少，所以严重支持一下～&lt;/p&gt;</summary><category term="haroopad"></category></entry><entry><title>如何git时免输用户名密码</title><link href="http://snailhome.github.io/note/no_password_when_git.html" rel="alternate"></link><published>2015-10-06T11:23:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-06:note/no_password_when_git.html</id><summary type="html">&lt;p&gt;我要push静态博客时都要输入用户名和密码，特麻烦，百度了一下有好几种免输密码的方式，不知所云，后来尝试了一种成功，看官看过来。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; output/.git
$ vim config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到这一段&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将其改为：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://yourname:password@github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，这个操作最好是在自己的机器上，毕竟用户名和密码明文放在上面，在其它机器上还是老老实实输入用户名和密码吧。&lt;/p&gt;</summary><category term="git"></category><category term="免密码"></category></entry><entry><title>10 个实用的 Bash alias</title><link href="http://snailhome.github.io/note/about_alias.html" rel="alternate"></link><published>2015-10-06T10:48:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-06:note/about_alias.html</id><summary type="html">&lt;p&gt;alias 即“别名”，为便于理解，你可以将其看成是一个命令的快捷方式。使用 alias 的最大好处是，可以简化输入，从而为你节省时间，并提高效率。定义的 alias 可以保存到 ~/.bashrc 文件中，以后在命令行中就可以直接使用了。&lt;/p&gt;
&lt;p&gt;要设置别名&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面介绍了 10 个 Bash alias，个人觉得都很实用：&lt;/p&gt;
&lt;h2 id="255b55"&gt;几个有用的别名用法&lt;/h2&gt;
&lt;h3 id="44c31b"&gt;ssh 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias server_name="ssh -v -l USERNAME IP ADDRESS"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改 server_name、USERNAME 及 IP 地址以适应你的需要。对于经常要使用 ssh 登录远程 shell 的同学来说，这是一个值得收藏的别名。&lt;/p&gt;
&lt;h3 id="769102"&gt;ls 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias ll="ls -l"，另一个 alias la="ls -a"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;意思很明显，在此就不多作解释了。&lt;/p&gt;
&lt;h3 id="5d5bd1"&gt;rm 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias rm="rm -i"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个别名让你更加安全地执行删除操作。&lt;/p&gt;
&lt;h3 id="f07115"&gt;df 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias df="df -h"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;让你以 MB 或 G 为单位查看磁盘的空间。&lt;/p&gt;
&lt;h3 id="8f5252"&gt;Firefox 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias ff1="/home/jlwallen/firefox/firefox" 及 alias ff2="/home/jlwallen/firefoxb3/firefox"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;适合使用两个 Firefox 版本的朋友，如一个稳定版，另一个为测试版。&lt;/p&gt;
&lt;h3 id="04ee60"&gt;书签别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias fftr="/home/jlwallen/firefox/firefox http://linuxtoy.org"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用于打开一个指定的网址。&lt;/p&gt;
&lt;h3 id="5842eb"&gt;文件别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias emenu="aterm nano -e ~/.e16/menus/user_apps"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如常常需要编辑的配置文件。&lt;/p&gt;
&lt;h3 id="f8e198"&gt;apt-get update 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias update="sudo apt-get update"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用其他 Linux 发行版的同学可以换一下其中的 sudo apt-get update。&lt;/p&gt;
&lt;h3 id="a2c9a8"&gt;rpm 批量安装别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias brpm="rpm -ivh ~/RPM/*rpm"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;便于同时安装多个 rpm 包。&lt;/p&gt;
&lt;h3 id="13342f"&gt;长路径别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias astart="cd ~/GNUstep/Library/AfterStep/start"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于需要经常访问的路径特别长的目录也可为其定义别名。&lt;/p&gt;
&lt;h2 id="a6f784"&gt;我的别名用法&lt;/h2&gt;
&lt;h3 id="339219"&gt;进入虚拟环境&lt;/h3&gt;
&lt;p&gt;我有一个 &lt;code&gt;virtualenv&lt;/code&gt; 的虚拟环境 &lt;code&gt;env2p&lt;/code&gt; ，为了快速进入虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias se2p="cd ~/env2p&amp;amp;source bin/activate"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我只要se2p就进入了虚拟环境。&lt;/p&gt;
&lt;h3 id="b05767"&gt;推送 &lt;code&gt;git&lt;/code&gt; 到 &lt;code&gt;github.io&lt;/code&gt;&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias git2p="cd ~/env2p/blog&amp;amp;&amp;amp;make publish&amp;amp;&amp;amp;cd output&amp;amp;&amp;amp;git add -A&amp;amp;&amp;amp;git commit -m 'Git My Static Blog'&amp;amp;&amp;amp;git push origin master"
&lt;/pre&gt;&lt;/div&gt;</summary><category term="bash"></category><category term="alias"></category><category term="别名"></category></entry><entry><title>CentOS7下安装Fcitx小企鹅输入法</title><link href="http://snailhome.github.io/note/fcitx_in_centos7.html" rel="alternate"></link><published>2015-09-29T23:07:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-29:note/fcitx_in_centos7.html</id><summary type="html">&lt;h1 id="bdd33a"&gt;CentOS7下安装Fcitx小企鹅输入法&lt;/h1&gt;
&lt;p&gt;感觉CentOS7自带的ibus输入法用得不尽人意，考虑安装个Fcitx小企鹅输入法试试，心动不如行动，Let's go～&lt;/p&gt;
&lt;h2 id="8c4cab"&gt;1. 加入EPEL源&lt;/h2&gt;
&lt;p&gt;EPEL7几乎是CentOS必备的源:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install epel-release
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="74e7ae"&gt;2. 添加mosquito-myrepo源&lt;/h2&gt;
&lt;p&gt;mosquito-myrepo是一个私人制作的第三方源，其中包含了fcitx输入法。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;项目地址： https://github.com/1dot75cm/myrepo
支持的发行版： Fedora 19/20/21/rawhide 以及RHEL/CentOS 7
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum-config-manager --add-repo&lt;span class="o"&gt;=&lt;/span&gt;https://copr.fedoraproject.org/coprs/mosquito/myrepo/repo/epel-7/mosquito-myrepo-epel-7.repo
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="7cfd47"&gt;3. 卸载原来的ibus输入法&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum remove ibus
$ sudo yum remove imsettings imsettings-libs im-chooser
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="59570b"&gt;4. 安装输入法&lt;/h2&gt;
&lt;p&gt;可以选择下面的各种输入法中的某一个或多个:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install fcitx-table-wbpy &lt;span class="c1"&gt;# 五笔拼音输入法&lt;/span&gt;
$ sudo yum install fcitx-googlepinyin fcitx-cloudpinyin &lt;span class="c1"&gt;# 谷歌拼音输入法&lt;/span&gt;
$ sudo yum install fcitx-qimpanel-configtool &lt;span class="c1"&gt;# 输入法面板设置&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="32dbcb"&gt;5. 配置Fcitx&lt;/h2&gt;
&lt;p&gt;在~/.bashrc中添加如下内容&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fcitx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;QT_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fcitx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;XMODIFIERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;”@im&lt;span class="o"&gt;=&lt;/span&gt;fcitx”
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="6d107a"&gt;6. 关闭gnome-shell 对键盘的监听，然后切换输入法为fcitx:&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pkill ibus-daemon
$ sudo gsettings &lt;span class="nb"&gt;set&lt;/span&gt; org.gnome.settings-daemon.plugins.keyboard active &lt;span class="nb"&gt;false&lt;/span&gt;
$ sudo imsettings-switch fcitx
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="d49982"&gt;7. 清理工作&lt;/h2&gt;
&lt;p&gt;mosquito-myrepo在不断地支持更多的软件，这也进一步造成该repo中的软件与base、EPEL中的软件存在版本冲突，在该repo的项目主页中建议安装yum的优先级插件 &lt;code&gt;yum-plugin-priorities&lt;/code&gt; ，这在一定程度上会缓解版本冲突问题，但无法从根本上避免。&lt;/p&gt;
&lt;p&gt;鉴于多个repo的版本冲突会造成一些麻烦，最好的办法还是在安装完需要的软件之后就禁用该repo，需要的时候再启用。&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/yum.repos.d/mosquito-myrepo-epel-7.repo&lt;/code&gt; ，将其中的 &lt;code&gt;enable=1&lt;/code&gt; 改成 &lt;code&gt;enable=0&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id="cc6739"&gt;8. 启用fcitx输入法&lt;/h2&gt;
&lt;p&gt;重启系统，fcitx自动启动，但图标藏在桌面右下角的通知栏中
打开fcitx的配置工具，选择输入法标签点”+”可以搜索并添加输入法&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Ctrl+空格&lt;/code&gt;开关输入法&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Ctrl+Shift&lt;/code&gt;切换输入法&lt;/p&gt;</summary><category term="CentOs7"></category><category term="Fcitx"></category></entry><entry><title>Django后台在记录保存时先保存旧记录内容</title><link href="http://snailhome.github.io/note/backup_record_before_save_in_Django.html" rel="alternate"></link><published>2015-09-21T22:14:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-21:note/backup_record_before_save_in_Django.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;场景：&lt;/strong&gt;&lt;br/&gt;
在一些重要的数据表，如设备台账表里，我们希望在记录保存时能够先保存一下旧记录内容，以便出现错误修改时能反查，恢复，这就是我们的需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们考虑一下，各数据表数据结构各不相同，如果针对每一个数据表做一个备份表太过繁琐，所以我们考虑只用一个&lt;code&gt;TextField&lt;/code&gt;来保存旧记录内容，而把记录的各字段内容生成&lt;code&gt;Json&lt;/code&gt;的形式保存到&lt;code&gt;TextField&lt;/code&gt;中，就可以不用管各数据表的字段有多少，再附上方便检索和引用的表名、记录号、修改时间、操作人员等字段信息，那一个备份表就基本上够了。&lt;/p&gt;
&lt;p&gt;我们在&lt;code&gt;recordbackup&lt;/code&gt;这个应用里&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup.models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="c1"&gt;# Create your models here.&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'应用'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'数据表'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'记录号'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'原记录内容'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;modified_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'修改时间'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'操作人'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;verbose_name_plural&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'记录备份'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建&lt;code&gt;admin.py&lt;/code&gt;用于后台查看备份数据，&lt;strong&gt;只读&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup/admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c1"&gt;# Register your models here.&lt;/span&gt;

&lt;span class="nd"&gt;@admin.register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordBackAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'modified_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'list_operate'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;readonly_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'modified_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_operate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;a href="/admin/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/"&amp;gt;&amp;lt;i class="icon-th-list" title="查看原记录"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'操作'&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成相关数据表&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py makemigrations
./manage.py migrate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再创建一个&lt;code&gt;utils.py&lt;/code&gt;用于转换记录为&lt;code&gt;Json&lt;/code&gt;和保存旧记录功能的函数。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup/utils.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    对对象进行json序列化，以json序列方式保存记录内容&lt;/span&gt;
&lt;span class="sd"&gt;    :param obj: 记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :return: 返回json串&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;OldRecordSave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    保存旧记录的数据&lt;/span&gt;
&lt;span class="sd"&gt;    :param self: 修改前的记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :param request:&lt;/span&gt;
&lt;span class="sd"&gt;    :param obj: 修改后的记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :param form: 表单数据&lt;/span&gt;
&lt;span class="sd"&gt;    :param change: 表单数据是否被修改&lt;/span&gt;
&lt;span class="sd"&gt;    :return: None&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RecordBack&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;# 更改的时候&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_label&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modified_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;obj_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;obj_original&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_original&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;# 新增的时候&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在记录备份的功能可以用了，我们在台账数据表&lt;code&gt;PcAdmin&lt;/code&gt;的&lt;code&gt;save_model()&lt;/code&gt;里加了保存旧记录的操作&lt;code&gt;OldRecordSave()&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pc/admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;recordbackup.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OldRecordSave&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PcAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;......&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;OldRecordSave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 保存旧记录的数据到备份表&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在我们可以做一个测试，进入PC的编辑页面，修改一个字段信息，然后保存，我们看看&lt;code&gt;记录备份&lt;/code&gt;表是不是多出一条记录，内容正是PC保存前的内容。
类似的，我们只要在需要保存旧数据的admin中引入&lt;code&gt;from recordbackup.utils import OldRecordSave&lt;/code&gt;，再在&lt;code&gt;save_model()&lt;/code&gt;的&lt;code&gt;obj.save()&lt;/code&gt;前加入&lt;code&gt;OldRecordSave(self, request, obj, form, change)&lt;/code&gt;就可以实现旧记录数据的保存了。&lt;/p&gt;</summary><category term="Django"></category><category term="保存"></category><category term="备份"></category></entry><entry><title>Django后台列表添加扩展列表列，字段内容以链接方式实现的方法</title><link href="http://snailhome.github.io/note/extend_admin_in_django.html" rel="alternate"></link><published>2015-09-17T13:27:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-17:note/extend_admin_in_django.html</id><summary type="html">&lt;p&gt;我们先来看一个例子，这是在后台数据表列表页面里添加扩展列，实现扩展操作的一个方法。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.urlresolvers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'published'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'writer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'published_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'list_operate'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_operate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;a href="&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;&amp;lt;i class="icon-eye-open" title="查看"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blog:blog_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'blogid'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'操作'&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这里定义一个回调函数&lt;code&gt;def list_operate(self, obj)：&lt;/code&gt;，用于返回一个扩展的链接的&lt;code&gt;html&lt;/code&gt;代码。&lt;/p&gt;
&lt;p&gt;这里同时用到&lt;code&gt;reverse&lt;/code&gt;函数，用来转换链接。&lt;/p&gt;
&lt;p&gt;另外一种是实现在编辑页面添加扩展字段的实现方式，是在models.py里实现的，可以参考 &lt;a href="extend_column_in_django.html"&gt;Djnago的Models里添加扩展字段，在编辑界面里的字段内容以链接方式实现的方法&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Djnago的Models里添加扩展字段，在编辑界面里的字段内容以链接方式实现的方法</title><link href="http://snailhome.github.io/note/extend_column_in_django.html" rel="alternate"></link><published>2015-09-17T13:00:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-17:note/extend_column_in_django.html</id><summary type="html">&lt;p&gt;先来看一个例子，该例子是让其在编辑界面里添加了个字段，其字段内容为搜索同姓氏人员的一个链接，该实现是在&lt;code&gt;models.py&lt;/code&gt;里实现的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.html&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;format_html&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Staff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;seek_same&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;        编辑界面里的扩展字段的内容以链接方式实现的方法&lt;/span&gt;
&lt;span class="sd"&gt;        """&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;format_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;a href="../../staff/?first_name__exact={}" target="_blank"&amp;gt;{}&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;seek_same&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'同姓氏人员'&lt;/span&gt;  &lt;span class="c1"&gt;# 短描述：即字段名&lt;/span&gt;
    &lt;span class="c1"&gt;# 显示HTML tag&lt;/span&gt;
    &lt;span class="c1"&gt;# 对于用户提交的数据, 永远不要这么设置!&lt;/span&gt;
    &lt;span class="n"&gt;seek_same&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里定义了一个&lt;code&gt;def seek_same(self):&lt;/code&gt;的回调函数，用于返回一个扩展字段的内容，由于字段内容的回显会做转码处理，所以在这里我们需要用到一个&lt;code&gt;format_html()&lt;/code&gt;函数，用来直接转成&lt;code&gt;html&lt;/code&gt;格式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;format_html()&lt;/code&gt; 函数第一个参数为模板字串，模板字串里的变量以"{}"标识，按位置依次与第二个参数及其后的参数对应。&lt;/p&gt;
&lt;p&gt;另外一种是实现在列表里添加扩展列的实现方式，是在&lt;code&gt;admin.py&lt;/code&gt;里实现的，可以参考&lt;a href="extend_admin_in_django.html"&gt;'Django后台列表添加扩展列，字段内容以链接方式实现的方法'&lt;/a&gt;&lt;/p&gt;</summary><category term="Django"></category><category term="扩展字段"></category></entry><entry><title>Fedora下安装Sublime Text 3</title><link href="http://snailhome.github.io/note/install_sublime_text3_in_fedora.html" rel="alternate"></link><published>2015-08-11T23:42:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-08-11:note/install_sublime_text3_in_fedora.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Sublime Text 3&lt;/code&gt; 官网上有 Windown版本的，Ubuntu版本的，MAC版本的，唯独没有 Fedora/RedHat版本的。&lt;/p&gt;
&lt;p&gt;网上找到了安装方法&lt;/p&gt;
&lt;h2 id="4a98b8"&gt;1. 下载安装脚本文件&lt;/h2&gt;
&lt;p&gt;下载32位版本：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://gist.githubusercontent.com/dkd903/531a2409c40c926c66d6/raw/2c83194719f1216a7321e4b48f6b604dc8779faf/Install_Sublime_Text_3.sh -O install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下载64位版本：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://gist.githubusercontent.com/dkd903/8ba3f51313c1781cc571/raw/f37b1c18547d086cd45e8b484efc518260106ea9/Install_Sublime_Text_3_64.sh -O install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="95a39f"&gt;2. 修改文件属性为可执行&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod +x install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="5beeca"&gt;3. 执行安装脚本&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;su -c &lt;span class="s2"&gt;"sh install-sublime-text.sh"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在你就可以在从菜单里找到 &lt;code&gt;Sublime Text 3&lt;/code&gt; 了，或者在命令行里执行 &lt;code&gt;subl&lt;/code&gt; 来运行它。&lt;/p&gt;
&lt;p&gt;如果先前你有安装过 &lt;code&gt;Sublime Text 2&lt;/code&gt;，那么安装完成后就会被 &lt;code&gt;Sublime Text 3&lt;/code&gt; 所替代。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;这里列出脚本内容以供参考：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;SHORTCUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[Desktop Entry]&lt;/span&gt;
&lt;span class="s2"&gt;Name=Sublime Text 3&lt;/span&gt;
&lt;span class="s2"&gt;Comment=Edit text files&lt;/span&gt;
&lt;span class="s2"&gt;Exec=/usr/local/sublime-text-3/sublime_text&lt;/span&gt;
&lt;span class="s2"&gt;Icon=/usr/local/sublime-text-3/Icon/128x128/sublime_text.png&lt;/span&gt;
&lt;span class="s2"&gt;Terminal=false&lt;/span&gt;
&lt;span class="s2"&gt;Type=Application&lt;/span&gt;
&lt;span class="s2"&gt;Encoding=UTF-8&lt;/span&gt;
&lt;span class="s2"&gt;Categories=Utility;TextEditor;"&lt;/span&gt;
&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#!/bin/sh&lt;/span&gt;
&lt;span class="s2"&gt;if [ \${1} == \"--help\" ]; then&lt;/span&gt;
&lt;span class="s2"&gt;    /usr/local/sublime-text-3/sublime_text --help&lt;/span&gt;
&lt;span class="s2"&gt;else&lt;/span&gt;
&lt;span class="s2"&gt;    /usr/local/sublime-text-3/sublime_text \$@ &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;
&lt;span class="s2"&gt;fi"&lt;/span&gt;

curl -L &lt;span class="s2"&gt;"http://c758482.r82.cf2.rackcdn.com/sublime_text_3_build_3059_x64.tar.bz2"&lt;/span&gt; -o &lt;span class="s2"&gt;"/usr/src/Sublime Text 3.tar.bz2"&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/src
tar -xvjf &lt;span class="s2"&gt;"Sublime Text 3.tar.bz2"&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"Sublime Text 3"&lt;/span&gt;
mkdir -pv &lt;span class="s2"&gt;"/usr/local/sublime-text-3"&lt;/span&gt;
mv -fv * &lt;span class="s2"&gt;"/usr/local/sublime-text-3/"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;"/usr/local/bin/subl"&lt;/span&gt;
chmod +x &lt;span class="s2"&gt;"/usr/local/bin/subl"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHORTCUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;"/usr/share/applications/sublime-text-3.desktop"&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Finish!"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Fedora"></category><category term="Sublime Text 3"></category></entry><entry><title>Python虚拟环境工具：virtualenv</title><link href="http://snailhome.github.io/note/virtualenv_4python.html" rel="alternate"></link><published>2015-08-05T01:21:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-08-05:note/virtualenv_4python.html</id><summary type="html">&lt;p&gt;virtualenv用于创建独立的Python环境，多个Python相互独立，互不影响，它能够：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在没有权限的情况下安装新套件&lt;/li&gt;
&lt;li&gt;不同应用可以使用不同的套件版本&lt;/li&gt;
&lt;li&gt;套件升级不影响其他应用&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="e655a4"&gt;安装&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    sudo apt-get install python-virtualenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    virtualenv [虚拟环境名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如，创建&lt;strong&gt;ENV&lt;/strong&gt;的虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    virtualenv ENV
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果系统中存在python2和python3两个版本，我们要让虚拟环境基于其中一个版本，可以这样操作&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    virtualenv -p python2 ENV  #基于python2
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    virtualenv -p python3 ENV  #基于python3
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;默认情况下，虚拟环境会依赖系统环境中的site packages，就是说系统中已经安装好的第三方package也会安装在虚拟环境中，如果不想依赖这些package，那么可以加上参数 &lt;code&gt;--no-site-packages&lt;/code&gt; 建立虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    virtualenv --no-site-packages [虚拟环境名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但在新版本virtualenv中这个选项已经是默认项了。&lt;/p&gt;
&lt;p&gt;启动虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    cd ENV
    source ./bin/activate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意此时命令行会多一个(ENV)，ENV为虚拟环境名称，接下来所有模块都只会安装到该目录中去。&lt;/p&gt;
&lt;p&gt;退出虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    deactivate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在虚拟环境安装Python套件
Virtualenv 附带有pip安装工具，因此需要安装的套件可以直接运行：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    pip install [套件名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果没有启动虚拟环境，系统也安装了pip工具，那么套件将被安装在系统环境中，为了避免发生此事，可以在&lt;code&gt;~/.bashrc&lt;/code&gt;文件中加上：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    export PIP_REQUIRE_VIRTUALENV=true
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;或者让在执行pip的时候让系统自动开启虚拟环境：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    export PIP_RESPECT_VIRTUALENV=true
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="c58843"&gt;Virtualenvwrapper&lt;/h2&gt;
&lt;p&gt;Virtaulenvwrapper是virtualenv的扩展包，用于更方便管理虚拟环境，它可以做：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将所有虚拟环境整合在一个目录下&lt;/li&gt;
&lt;li&gt;管理（新增，删除，复制）虚拟环境&lt;/li&gt;
&lt;li&gt;切换虚拟环境&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="e655a4_1"&gt;安装&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    sudo easy_install virtualenvwrapper
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;此时还不能使用virtualenvwrapper，默认virtualenvwrapper安装在/usr/local/bin下面，实际上你需要运行virtualenvwrapper.sh文件才行，先别急，打开这个文件看看,里面有安装步骤，我们照着操作把环境设置好。&lt;/p&gt;
&lt;p&gt;创建目录用来存放虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    mkdir $HOME/.virtualenvs
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在&lt;code&gt;~/.bashrc&lt;/code&gt;中添加行：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    export WORKON_HOME=$HOME/.virtualenvs
    source /usr/local/bin/virtualenvwrapper.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存退出后运行： &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时virtualenvwrapper就可以使用了。&lt;/p&gt;
&lt;p&gt;列出虚拟环境列表&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    workon
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;也可以使用&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    lsvirtualenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;新建虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    mkvirtualenv [虚拟环境名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动/切换虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    workon [虚拟环境名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;删除虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    rmvirtualenv [虚拟环境名称]
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;离开虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    deactivate
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="virtualenv"></category></entry><entry><title>Fedora22下安装五笔</title><link href="http://snailhome.github.io/note/install_wubi_in_fedora.html" rel="alternate"></link><published>2015-07-31T23:48:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-07-31:note/install_wubi_in_fedora.html</id><summary type="html">&lt;p&gt;Fedora22输入法以ibus为框架，因此要安装五笔输入法，也应该安装安装ibus框架下的极点或海峰五笔。&lt;/p&gt;
&lt;h2 id="aea971"&gt;输入法安装&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ su
Password:
# dnf install -y ibus*wubi*
# reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;后面一个操作就是重启系统
重启登录系统后：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;点击屏幕右上角，点击&lt;code&gt;工具图标&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;在打开的窗口里点击&lt;code&gt;个人&lt;/code&gt;，点击&lt;code&gt;区域和语言&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;点击&lt;code&gt;区域和语言&lt;/code&gt;对话框的&lt;code&gt;输入源&lt;/code&gt;下的&lt;code&gt;+&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;选择&lt;code&gt;添加输入源&lt;/code&gt;里的&lt;code&gt;汉语（中国）&lt;/code&gt;，&lt;/li&gt;
&lt;li&gt;选择&lt;code&gt;汉语（极点五笔86（极爽词库 6.0））&lt;/code&gt;或&lt;code&gt;汉语（海峰五笔86）&lt;/code&gt;，点击&lt;code&gt;添加&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="7fd882"&gt;输入法切换&lt;/h2&gt;
&lt;p&gt;ibus输入法切换使用&lt;code&gt;WIN&lt;/code&gt;键加&lt;code&gt;空格&lt;/code&gt;键来切换。&lt;/p&gt;</summary><category term="五笔"></category></entry><entry><title>Fedora22 安装 Chrome</title><link href="http://snailhome.github.io/note/install_chrome_in_fedora.html" rel="alternate"></link><published>2015-07-30T23:41:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-07-30:note/install_chrome_in_fedora.html</id><summary type="html">&lt;p&gt;Fedora22 无法直接安装 Chrome，需要先添加&lt;code&gt;Chrome&lt;/code&gt;的软件仓库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ su -
Password:
&lt;span class="c1"&gt;# cat &amp;lt;&amp;lt; EOF &amp;gt; /etc/yum.repos.d/google-chrome.repo&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;google-chrome&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;google-chrome - &lt;span class="se"&gt;\$&lt;/span&gt;basearch
&lt;span class="nv"&gt;baseurl&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;http://dl.google.com/linux/chrome/rpm/stable/&lt;span class="se"&gt;\$&lt;/span&gt;basearch
&lt;span class="nv"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;gpgcheck&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1
&lt;span class="nv"&gt;gpgkey&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https://dl-ssl.google.com/linux/linux_signing_key.pub
EOF
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在可以安装了&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# dnf install -y google-chrome-stable&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;但是会有一个&lt;code&gt;获取GPG密钥错误&lt;/code&gt;的提示，加一个参数就可以了：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# dnf install -y google-chrome-stable --nogpg&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Chrome"></category></entry></feed>