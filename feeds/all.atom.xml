<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>StepUp</title><link href="http://snailhome.github.io/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>http://snailhome.github.io/</id><updated>2016-10-12T21:35:00+08:00</updated><entry><title>Django的view23事</title><link href="http://snailhome.github.io/note/django_view.html" rel="alternate"></link><published>2016-10-12T21:35:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-10-12:note/django_view.html</id><summary type="html">&lt;p&gt;以&lt;code&gt;demo&lt;/code&gt;app为例。&lt;/p&gt;
&lt;p&gt;view的一般步骤
1. 构造 &lt;code&gt;Context&lt;/code&gt;，这是给模板传值的变量
2. 返回一个以模板构造生成的页面&lt;/p&gt;
&lt;h2 id="dea12e"&gt;用 &lt;code&gt;render&lt;/code&gt; 还是用 &lt;code&gt;render_to_response&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;render() 结合一个给定的模板和一个给定的上下文字典，并返回一个渲染后的 HttpResponse 对象。&lt;/p&gt;
&lt;p&gt;render() 与以一个强制使用RequestContext的context_instance 参数调用render_to_response() 相同。&lt;/p&gt;
&lt;p&gt;所以，如果使用 &lt;code&gt;render&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hello The World!'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'demo/hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果使用 &lt;code&gt;render_to_response&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RequestContext&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;'hello'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Hello The World!'&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_to_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'demo/hello.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;context&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;需要好好比较一下差异。&lt;/p&gt;
&lt;h2 id="33f747"&gt;@装饰器&lt;/h2&gt;
&lt;p&gt;在一些view里我们经常要做一些重复性的工作，如判断是否已登录，否则跳转到登录页面，这些操作都必须在开始功能代码前进行，那我们就可以用@装饰器来减少代码。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;reporter_is_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_se_reporter_is_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# 非登录状态的轩到登录页面&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reporter_is_login&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;resolved_login_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'demo:login'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolved_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;# 以下功能代码&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;view2,view3的前端也都是这样的操作，那么我们用装饰器来实现&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;demo&lt;/code&gt;app目录下创建文件&lt;code&gt;decorator,py&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.shortcuts&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;functools&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;demo_login_required&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reporter_login_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'demo:login'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 报修未登录跳转到登录页面的装饰器&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nd"&gt;@functools.wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;reporter_is_login&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_se_reporter_is_login'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="c1"&gt;# 非登录状态的轩到登录页面&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;reporter_is_login&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="n"&gt;resolved_login_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;resolve_url&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;reporter_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;redirect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;resolved_login_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 对应wrapper的参数&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;decorator&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后我们在需要做登记判断的view前加上装饰器，如修改&lt;code&gt;view1&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;demo.decorator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;demo_login_required&lt;/span&gt;

&lt;span class="nd"&gt;@demo_login_required&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="c1"&gt;# 以下功能代码&lt;/span&gt;
    &lt;span class="o"&gt;....&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="04bd0c"&gt;过滤器&lt;/h2&gt;</summary><category term="django"></category><category term="view"></category></entry><entry><title>Django的Form验证的一个小问题</title><link href="http://snailhome.github.io/note/django_form_is_valid.html" rel="alternate"></link><published>2016-10-12T20:48:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-10-12:note/django_form_is_valid.html</id><summary type="html">&lt;p&gt;在学习The django book 的时候，运行下面代码&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;出现了下面的错误
'ContactForm' object has no attribute 'cleaned_data'&lt;/p&gt;
&lt;p&gt;但是实际上这个方法是存在的，后来检查代码发现把is_valid()后面的括号给遗漏掉了，就出现这个问题，后来加上就好了，&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;is_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cleaned_data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;记录以备忘&lt;/p&gt;</summary><category term="django"></category><category term="is_valid()"></category></entry><entry><title>PyCharm 4.5.4一个运行错误的处理</title><link href="http://snailhome.github.io/note/run_error_in_pycharm.html" rel="alternate"></link><published>2016-02-21T14:21:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-21:note/run_error_in_pycharm.html</id><summary type="html">&lt;h1 id="8e3a7b"&gt;PyCharm 4.5.4一个运行错误的处理&lt;/h1&gt;
&lt;p&gt;在openSUSE Leap 42.1中按惯例解压，进bin，运行&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo ~/pycharm/bin/pycharm.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;竟然出现了错误：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;OpenJDK 64-Bit Server VM warning: ignoring option MaxPermSize=350m; support was removed in 8.0

Startup Error: Unable to detect graphics environment
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在其它Linux发行版都没有问题呀！&lt;/p&gt;
&lt;p&gt;搜索一番，无果。&lt;/p&gt;
&lt;p&gt;后来不经意使用&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; ~/pycharm/bin/pycharm.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常启动了，好诡异，记录一下以备忘。&lt;/p&gt;</summary><category term="pycharm"></category></entry><entry><title>调教Retext</title><link href="http://snailhome.github.io/note/do_someting_after_install_retext.html" rel="alternate"></link><published>2016-02-20T21:29:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-20:note/do_someting_after_install_retext.html</id><summary type="html">&lt;h1 id="e054af"&gt;调教Retext&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;Retext几番安装后又删除，总是因为那难以接受的Markdown预览效果，后来才发现，原来Retext也是可以调教成心目中的样子，&lt;strong&gt;原来Retext也可以这么美&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;下面的很多操作都是结合网上教程，再加上在&lt;code&gt;openSUSE Leap 42.1&lt;/code&gt;系统上的实际操作的结果记录下来的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="b64d7f"&gt;安装Retext&lt;/h2&gt;
&lt;p&gt;从openSUSE官网软件库搜索&lt;code&gt;Retext&lt;/code&gt;并下载安装：&lt;a href="https://software.opensuse.org/421/zh_CN"&gt;https://software.opensuse.org/421/zh_CN&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="49a2b0"&gt;调教需知&lt;/h2&gt;
&lt;p&gt;Retext的配置文件在&lt;code&gt;~/.config/ReText project/ReText.conf&lt;/code&gt;
Retext的markdown扩展语法设置文件在&lt;code&gt;~/.config//markdown-extensions.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Retext的配置项可以参考&lt;a href="https://sourceforge.net/p/retext/wiki/Configuration%20file/"&gt;官网的说明&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="21f4e1"&gt;Retext的配置文件&lt;/h2&gt;
&lt;p&gt;这是我的Retextr的配置内容&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.config/ReText project/ReText.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[General]
appStyleSheet=~/.config/ReText project/-style.qss
autoSave=true
editorFont=Monospace
editorFontSize=11
font=Monospace
fontSize=14
highlightCurrentLine=true
lineNumbersEnabled=true
previewState=true
recentFileList=/home/snail/env2p/blog/content/note/do_someting_after_install_retext.md, /home/snail/env2p/blog/content/note/extend_admin_in_django.md, /home/snail/env2p/blog/content/note/markdown.md
restorePreviewState=true
styleSheet=~/.config/ReText project/markdown7.css
tabInsertsSpaces=true
tabWidth=4
useWebKit=true
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;appStyleSheet&lt;/strong&gt; 项是设置界面风格的,这里的style.qss我是取自&lt;code&gt;QDarkStyleSheet&lt;/code&gt;里的一套暗黑风格的界面&lt;a href="https://github.com/ColinDuquesnoy/QDarkStyleSheet/blob/master/qdarkstyle/style.qss"&gt;style.css&lt;/a&gt;，你可以下载下来放在&lt;code&gt;~/.config/ReText project/&lt;/code&gt;里，并在配置文件里指向它。但我的系统是浅色主题所以没有采用它。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;autoSave&lt;/strong&gt; 项是确定是否自动保存。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;editorFont&lt;/strong&gt; 项是设置编辑窗口字体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;editorFontSize&lt;/strong&gt; 项是设置编辑窗口字体大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;font&lt;/strong&gt; 项是设置预览窗口字体。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;fontSize&lt;/strong&gt; 项是设置预览窗口字体大小。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;handleWebLinks&lt;/strong&gt; 项是否指定web链接，false为外部浏览器打开链接，true为在Retext预览界面里打开链接。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;highlightCurrentLine&lt;/strong&gt; 项是确定是否高亮当前编辑行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lineNumbersEnabled=true&lt;/strong&gt; 项是确定是否显示行号。  &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;previewState&lt;/strong&gt; 项是确定预览状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recentFileList&lt;/strong&gt; 项是保存最近的打开的文件历史。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;restorePreviewState&lt;/strong&gt; 项是确定是否恢复上次关闭Retext时的预览窗口状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;styleSheet&lt;/strong&gt; 项是指定预览窗口的风格模板，这里的markdown7.css是取得&lt;a href="https://github.com/jasonm23/markdown-css-themes"&gt;markdown-css-themes&lt;/a&gt;的&lt;a href="https://github.com/jasonm23/markdown-css-themes/blob/gh-pages/markdown7.css"&gt;markdown7.css&lt;/a&gt; ，你可以下载下来放在&lt;code&gt;~/.config/ReText project/&lt;/code&gt;里，并在配置文件里指向它。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabInsertsSpaces&lt;/strong&gt; 项是确认是否把TAB键转换成空格。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tabWidth&lt;/strong&gt; 项是指定TAB键的字符个数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;useWebKit&lt;/strong&gt; 项是确定是否开启 QtWebKit engine，设置为true预览效果会较好。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="56cc61"&gt;添加Markdown扩展&lt;/h2&gt;
&lt;p&gt;正常安装&lt;code&gt;Python-Markdown&lt;/code&gt;后，就有一些扩展可以使用，这些扩展可以参考&lt;a href="https://pythonhosted.org/Markdown/extensions/"&gt;官网说明&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;这里列表了几个常用的扩展项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;codehilite&lt;/strong&gt; 添加语法高亮扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;footnotes&lt;/strong&gt;   添加脚注扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;meta&lt;/strong&gt; 添加预览时消除meta题头的扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tables&lt;/strong&gt; 添加表格扩展&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;toc&lt;/strong&gt; 添加目录扩展&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要打开这些扩展，编辑Retext的Markdown扩展配置文件&lt;sup id="fnref:ext"&gt;&lt;a class="footnote-ref" href="#fn:ext" rel="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.config//markdown-extensions.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;codehilite
footnotes
meta
tables
toc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;保存扩展配置文件，重新打开Retext后即可生效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;codehilite&lt;/strong&gt; 语法高亮&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;程序/语句段一个TAB缩进或者&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;```python  
……  
```
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;footnotes&lt;/strong&gt; 脚注&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要脚注的后面&lt;code&gt;[^1]&lt;/code&gt;
在文后添加脚注说明&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[^1]: 这里是脚注说明
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;这里的&lt;code&gt;1&lt;/code&gt;可以是任意一个字串，但脚注及其说明要对应&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;meta&lt;/strong&gt; 预览时消除meta题头&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加后在预览时就不会显示meta题头了&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tables&lt;/strong&gt; 允许表格&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;|商品|价格|
|--|--|
|番茄|1.5|
|马铃薯|0.8|
|娃娃菜|1.8|
&lt;/pre&gt;&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;商品&lt;/th&gt;
&lt;th&gt;价格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;番茄&lt;/td&gt;
&lt;td&gt;1.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;马铃薯&lt;/td&gt;
&lt;td&gt;0.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;娃娃菜&lt;/td&gt;
&lt;td&gt;1.8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;toc&lt;/strong&gt; 添加目录
在需要添加目录的地放放置&lt;code&gt;[TOC]&lt;/code&gt;即可。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="9e68fa"&gt;添加第三方Markdown扩展&lt;/h2&gt;
&lt;h3 id="9edcb1"&gt;&lt;strong&gt;mathjax&lt;/strong&gt; 添加数学公式&lt;/h3&gt;
&lt;p&gt;网上介绍&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install libjs-mathjax
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;不过这是Debian系统的安装方法，但openSUSE里怎么也找不到&lt;code&gt;libjs-mathjax&lt;/code&gt;，后来在&lt;code&gt;Python-Markdown&lt;/code&gt;的&lt;a href="https://github.com/waylan/Python-Markdown/wiki/Third-Party-Extensions"&gt;第三方扩展&lt;/a&gt;里找到了&lt;code&gt;python-markdown-math&lt;/code&gt;，总算解决了&lt;code&gt;mathjax&lt;/code&gt;的问题。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo pip install python-markdown-math
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;s
然后一样的添加&lt;code&gt;mathjax&lt;/code&gt;到Retext的扩展配置文件里。
要看到公式的效果，还必须在&lt;code&gt;编辑&lt;/code&gt;菜单下开启&lt;code&gt;使用WebKit渲染&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;再然后我们添加一个公式&lt;code&gt;$a^2+b^2=c^2$&lt;/code&gt;，看看效果：$a^2+b^2=c^2$&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有点讨厌，开了&lt;code&gt;mathjax&lt;/code&gt;后，如果有公式存在，预览刷新后都会回到预览页面都是回到页面顶部，而且还会刷新闪动。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="e558cd"&gt;好了，现在可以装比了～～&lt;/h2&gt;
&lt;hr/&gt;
&lt;div class="footnote"&gt;
&lt;hr/&gt;
&lt;ol&gt;
&lt;li id="fn:ext"&gt;
&lt;p&gt;也可以在 Edit -&amp;gt; Preferences -&amp;gt; Markdown syntax extensions 框中添加。所有的扩展的名称都要小写，即Markdown扩展后的名称，如脚注：markdown.extensions.footnotes，则使用名称footnotes；另外，两个扩展之间用小写逗号分隔。 &lt;a class="footnote-backref" href="#fnref:ext" rev="footnote" title="Jump back to footnote 1 in the text"&gt;↩&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</summary></entry><entry><title>Sublime Text 3 安装配置记录</title><link href="http://snailhome.github.io/note/setting_sublime_text3.html" rel="alternate"></link><published>2016-02-20T21:29:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-20:note/setting_sublime_text3.html</id><summary type="html">&lt;h1 id="cae213"&gt;Sublime Text 3 安装配置记录&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id="d22849"&gt;Sublime Text 3 安装&lt;/h2&gt;
&lt;p&gt;到openSUSE 官网下载安装：
&lt;a href="https://software.opensuse.org/package/sublime-text-beta"&gt;https://software.opensuse.org/package/sublime-text-beta&lt;/a&gt;。&lt;/p&gt;
&lt;h2 id="0101f9"&gt;配置Sublime Text 3&lt;/h2&gt;</summary></entry><entry><title>openSUSE下uWSGI安装过程记录</title><link href="http://snailhome.github.io/note/uwsgi_in_opensuse.html" rel="alternate"></link><published>2016-02-06T23:44:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-02-06:note/uwsgi_in_opensuse.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;本文操作在openSUSE leap 42.1 Gnome和KDE环境下测试通过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="f411d0"&gt;说明&lt;/h2&gt;
&lt;p&gt;uWSGI用于Django项目的运行&lt;br/&gt;
登录用户：snail&lt;br/&gt;
项目目录：/home/snail/e3dj19/mysite&lt;br/&gt;
项目名称：mysite&lt;/p&gt;
&lt;h2 id="1e1d9a"&gt;安装uWSGI&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in gcc make python-devel python3-devel
sudo pip install uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注:&lt;/strong&gt; 不要用搜索官网.ymp软件包的方式安装，再应用pip的方式安装uWSGI。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="07d521"&gt;添加Virtualenv环境及Django项目&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
virtualenv -p python3 e3dj19
&lt;span class="nb"&gt;cd&lt;/span&gt; e3dj19
&lt;span class="nb"&gt;source&lt;/span&gt; bin/activate

pip install django

django-admin startproject mysite
&lt;span class="nb"&gt;cd&lt;/span&gt; mysite
./manage.py startapp blog
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑Django项目&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py runserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;显示正常后再继续&lt;/p&gt;
&lt;h2 id="4b5d29"&gt;添加uWSGI配置文件&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mkdir /etc/uwsig
sudo mkdir /etc/uwsig/vassals
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑通用uwsgi配置模板&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim uwsgi.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;uwsgi.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
# Django项目的uwsgi配置模板
# 调用模板使用以下语句：
# prj-home = 项目目录绝对路径
# prj-name = 项目名称
# ini = 本模板文件.ini
#
# 将配置文件命名为Django的项目名
# uwsgi单独使用用http，用于单独测试用
#http       = :8000
# uwsgi在Nginx中做中间件用socket
#socket      = /tmp/uwsgi-%(prj-name).sock
socket      = :8000

pidfile     = /tmp/uwsgi-%(prj-name).pid
chdir       = %(prj-home)
home        = %(prj-home)/..
module      = %(prj-name).wsgi


master      = true
processes   = 4
threads      = 2
buffer-size = 40960
#stats      = :9191
vacuum      = true
#daemonize  = /tmp/uwsgi-%(prj-name).log 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;编辑django项目的uwsgi配置实例&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/uwsgi/vassals/e3dj19-mysite.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;e3dj19-mysite.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
prj-home   = /home/snail/e3dj19/mysite
prj-name   = mysite
ini        = /etc/uwsgi/uwsgi.ini
socket      = :9000
# 下面添加要变更或新增的uWSGI配置项
# 添加ini项所指文件中有的配置项如threads项则为变更
# threads      = 20
# 添加文件中没有的配置项如stats项则为新增
# stats      = :9191
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="cbf9cb"&gt;测试uWSGI的单位个项目运行情况&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi /etc/uwsgi/vassals/e3dj19-mysite.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;h2 id="21aa3d"&gt;添加uWSGI的Emperor模式&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi --emperor /etc/uwsgi/vassals/
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/uwsgi/emperor.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;emperor.ini配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[uwsgi]
emperor = /etc/uwsgi/vassals
uid = nginx
gid = nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;测试uWSGI的Emperor模式的运行情况&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;uwsgi /etc/uwsgi/emperor.ini
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;正常运行&lt;/p&gt;
&lt;p&gt;至此uWSGI配置多个Django应用同步运行的配置已正确配置，以后新的Django应用只需类似/etc/uwsgi/vassals/e3dj19-mysite.ini配置即可&lt;/p&gt;
&lt;h2 id="68104a"&gt;添加到systemd&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/systemd/system/uwsgi.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;uwsgi.service配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[Unit]
Description=uWSGI Emperor
After=syslog.target

[Service]
#User=root
Type=notify
ExecStart=/usr/bin/uwsgi --ini /etc/uwsgi/emperor.ini
#RuntimeDirectory=uwsgi # Requires systemd version 211 or newer
Restart=always
KillSignal=SIGQUIT
StandardError=syslog
NotifyAccess=all

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动uWSGI服务并测试状态&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl start uwsgi.service
systemctl status uwsgi
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;服务运行正常&lt;/p&gt;
&lt;h1 id="e48e76"&gt;安装配置nginx&lt;/h1&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in nginx
sudo nginx -v
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;可以显示nginx版本号&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo vim /etc/nginx/nginx.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;nginx.conf配置如下：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http {
    upstream django_uwsgi {
        # 这是sock文件模式
        #server unix:///tmp/uwsgi-mysite.sock;
        # 这是端口监听模式
        server 127.0.0.1:9000;
    }

    server {
        listen       80;
        ....
        location / {
            uwsgi_pass  django_uwsgi;
            include     uwsgi_params;
        }
        ....


    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动nginx服务&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;systemctl start nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;打开浏览器输入127.0.0.1，正常显示Djnago页面。
至此，uWSGI的配置完成，并且测试成功通过。&lt;/p&gt;</summary><category term="uWSGI"></category><category term="openSUSE"></category></entry><entry><title>调教openSUSE Leap 42.1</title><link href="http://snailhome.github.io/note/setting_opensuse.html" rel="alternate"></link><published>2016-01-31T23:02:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2016-01-31:note/setting_opensuse.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;这两天又抽风把 &lt;code&gt;Linux Mint&lt;/code&gt; 系统改装成了 &lt;code&gt;openSUSE Leap 42.1&lt;/code&gt;，就着安装使用的情况，做一些记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="4300aa"&gt;&lt;code&gt;Gnome3&lt;/code&gt; 和 &lt;code&gt;KDE5&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;按默认桌面安装了&lt;code&gt;KDE5&lt;/code&gt;，&lt;code&gt;KDE&lt;/code&gt;看似自带了很多功能，各个方面都可以配置，但个人感觉带是太花俏，于是有重装成 &lt;code&gt;Gnome3&lt;/code&gt;，感觉还是 &lt;code&gt;Gnome3&lt;/code&gt; 干净，简洁。&lt;/p&gt;
&lt;p&gt;感觉刚装的 &lt;code&gt;openSUSE&lt;/code&gt; 比其他发行版带的东西更少，好吧，重新再装起来。&lt;/p&gt;
&lt;h2 id="4fd8a1"&gt;系统更新&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;openSUSE&lt;/code&gt; 安装使用 &lt;code&gt;zypper&lt;/code&gt; 命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;好奇怪，刚装的系统更新出错，非得重启以后才能更新&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;更改国内源并更新软件
我用的是中科大源，直接终端运行以下命令。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper mr -da
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/oss USTC:42.1:OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/distribution/leap/42.1/repo/non-oss USTC:42.1:NON-OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/oss USTC:42.1:UPDATE-OSS
sudo zypper ar -fc https://mirrors.ustc.edu.cn/opensuse/update/leap/42.1/non-oss USTC:42.1:UPDATE-NON-OSS
sudo zypper ref
sudo zypper up
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;系统更新&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper up
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;搜索软件包，如&lt;code&gt;virutalbox&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper se virtualbox
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;安装软件，如&lt;code&gt;Virtualbox&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in virtualbox virtualbox-qt
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="a5e9b0"&gt;个人必备的gnome扩展&lt;/h2&gt;
&lt;p&gt;工具 -&amp;gt; 优化工具 -&amp;gt; 扩展 -&amp;gt; 获取得多扩展&lt;/p&gt;
&lt;p&gt;安装后可能需要自己设置一下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hide top bar —— 全屏自动隐藏顶栏,缺少这个gnome3没法用&lt;/li&gt;
&lt;li&gt;Clipboard Indicator —— 剪切板&lt;/li&gt;
&lt;li&gt;Media player indicator —— 显示音乐播放器的状态&lt;/li&gt;
&lt;li&gt;Battery status —— 显示电池电量的百分比&lt;/li&gt;
&lt;li&gt;Netspeed —— 在顶栏上显示网速&lt;/li&gt;
&lt;li&gt;Removable Drive Menu —— 在顶栏显示移动盘图标&lt;/li&gt;
&lt;li&gt;taskbar —— 顶栏颜色等&lt;/li&gt;
&lt;li&gt;user themes —— 启用自定义的shell主题&lt;/li&gt;
&lt;li&gt;Lunar Calendar —— 阴历（依赖opensuse:typelib-1_0-LunarDate-2_0）&lt;/li&gt;
&lt;li&gt;Todo.txt ——  一个任务/待办项的小工具
你们可以自己找扩展……&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fbc224"&gt;安装图标主题&lt;/h2&gt;
&lt;p&gt;我这里安装的是一个图标主题 &lt;code&gt;numix-icon-theme-circle&lt;/code&gt;，opensuse官网下载dvd那里（https://software.opensuse.org/421/zh_CN）搜就行，这样最方便了，（推荐这样，更方便。）&lt;/p&gt;
&lt;h2 id="b3454c"&gt;安装外观主题&lt;/h2&gt;
&lt;p&gt;同图标主题一样，这里搜索一个 &lt;code&gt;arc-theme&lt;/code&gt;，然后在 &lt;code&gt;工具 -&amp;gt; 优化工具-&amp;gt; 外观&lt;/code&gt; 的 GTK+ 和 Shell主题可以设置这个主题&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增加Packman源，安装chromium和pepperflash
像flash、ffmpeg这些非自由版本软件只能通过Packman源安装，flash是上网必备插件这点不用我说吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper ar http://mirrors.hust.edu.cn/packman/suse/openSUSE_Leap_42.1/ Packman
sudo zypper ref
sudo zypper in chromium chromium-pepper-flash
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;安装VLC播放器
增加VLC源，用zypper或yast安装&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper ar http://download.videolan.org/pub/vlc/SuSE/Leap_42.1/ VLC
sudo zypper ref
sudo zypper in vlc
&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;添加输入法
系统自带的五笔输入法是&lt;code&gt;五笔大字集&lt;/code&gt;，但候选栏里带常出现方块字，而且不能五笔拼音混打，安装个五笔拼音输入法方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in fcitx-table-cn-wubi-pinyin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后进fcitx的‘配置当前输入法`添加、调整输入法项吧。&lt;/p&gt;
&lt;h2 id="88b890"&gt;安装 &lt;code&gt;WPS&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;下载RPM文件：&lt;a href=""&gt;http://kdl.cc.ksosoft.com/wps-community/download/a20/wps-office-10.1.0.5444-1.a20.x86_64.rpm&lt;/a&gt;
双击下载的RPM文件即可开始安装
首次打开时会提示缺少字体文件，从我的百度云盘下载&lt;a href="http://pan.baidu.com/s/1gdSp53H"&gt;WPS字体&lt;/a&gt;吧
解压后把里面的&lt;code&gt;*.ttf&lt;/code&gt;复制到&lt;code&gt;~/.fonts&lt;/code&gt;里就可以了。&lt;/p&gt;
&lt;h2 id="ecaadc"&gt;安装Wine&lt;/h2&gt;
&lt;p&gt;直接zypper吧&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo zypper in wine
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="5a0afc"&gt;其它&lt;/h2&gt;
&lt;p&gt;其它优化最后附上......&lt;/p&gt;
&lt;h2 id="eee83a"&gt;资源&lt;/h2&gt;
&lt;p&gt;我们需要记住一些资源：
主站：
&lt;a href=""&gt;http://www.suse.org.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;折腾指南：
&lt;a href=""&gt;https://lug.ustc.edu.cn/sites/opensuse-guide/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;中文社区：
&lt;a href=""&gt;https://forum.suse.org.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;仓库:
&lt;a href=""&gt;http://software.opensuse.org/search&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;鸟哥：
&lt;a href=""&gt;http://vbird.dic.ksu.edu.tw/&lt;/a&gt;&lt;/p&gt;</summary><category term="openSUSE"></category></entry><entry><title>WPS for Linux 安装手记</title><link href="http://snailhome.github.io/note/wps_4_linux.html" rel="alternate"></link><published>2015-10-30T00:13:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-30:note/wps_4_linux.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;问题:&lt;/strong&gt; 我听说一个好东西Kingsoft Office（译注：就是WPS），所以我想在我的Linux上试试。我怎样才能安装Kingsoft Office呢？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kingsoft Office 是一套办公套件，支持多个平台，包括Windows, Linux, iOS 和 Android。它包含三个组件：Writer（WPS文字）用来文字处理，Presentation（WPS演示）支持幻灯片，Spereadsheets（WPS表格）是电子表格。其使用免费增值模式，其中基础版本是免费使用。比较其他的linux办公套件，如LibreOffice、 OpenOffice，其最大优势在于，Kingsoft Office能最好的兼容微软的Office（译注：版权问题？了解下wps和Office的历史问题，可以得到一些结论）。因此如果你需要在windows和linux平台间交互，Kingsoft office是一个很好的选择。&lt;/p&gt;
&lt;p&gt;WPS for Linux 官方下载地址： &lt;a href="http://wps-community.org/download.html"&gt;http://wps-community.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id="38983c"&gt;CentOS, Fedora 或 RHEL中安装Kingsoft Office&lt;/h2&gt;
&lt;p&gt;在官方页面下载RPM文件。&lt;/p&gt;
&lt;p&gt;需要使用yum命令并用"localinstall"选项来本地安装这个RPM包&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum localinstall kingsoft-office-9.1.0.4244-0.1.a12p3.i686.rpm
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;注意不要使用rpm命令安装。否者，你会得到依赖错误，而且很难解决：&lt;/p&gt;
&lt;p&gt;错误: 依赖失败:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;libICE.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libSM.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libX11.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libXext.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libXrender.so.1 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
libc.so.6 is needed by kingsoft-office-9.1.0.4244-0.1.a12p3.i686
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;基于Red Hat的发行版有多重库支持。如果你要想安装的RPM包是32位的并有32位库依赖（你的系统是64位的），一个很好的解决方法就是使用yum来安装。只要RPM在构建时候已经添加所有依赖关系，yum就可以自动使用yum库解决依赖关系。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="5bd1a0"&gt;Debian, Ubuntu 和 Linux Mint 中安装Kingsoft Office&lt;/h2&gt;
&lt;p&gt;在官方页面下载DEB包。官方RPM包同样只支持32位版本linux，但是你可以在64位中安装。&lt;/p&gt;
&lt;p&gt;DEB包同样遇到一堆依赖。因此使用gdebi命令来代替dpkg来自动解决依赖。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install gdebi-core
$ sudo gdebi kingsoft-office_9.1.0.4244~a12p3_i386.deb 
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动 Kingsoft Office&lt;/p&gt;
&lt;p&gt;安装完成后，你就可以在桌面管理器轻松启动Witer（WPS文字）, Presentation（WPS演示）, and Spreadsheets（WPS表格）。&lt;/p&gt;
&lt;p&gt;不但如此，你也可以在命令行中启动Kingsoft Office。&lt;/p&gt;
&lt;p&gt;启动Wirter（WPS文字），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wps &lt;span class="o"&gt;(&lt;/span&gt;译注：原文丢失此命令&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动Presentation（WPS演示），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wpp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;启动Spreadsheets（WPS表格），使用这个命令：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ et
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="9b6d1a"&gt;安装缺失的字体&lt;/h2&gt;
&lt;p&gt;首次运行wps时会提示缺失字体：wingding、wingding2、wingding3、webdings、MT Extra&lt;/p&gt;
&lt;p&gt;字体文件可以从Windows系统的&lt;code&gt;C:\Windows\fonts&lt;/code&gt;复制，复制到&lt;code&gt;～/.fonts&lt;/code&gt;，没有目录就创建一个啦。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PS. 你也可以在下面的&lt;a href="http://pan.baidu.com/s/1i4yJHXj"&gt;百度云&lt;/a&gt;里找到这些字体。&lt;/p&gt;
&lt;/blockquote&gt;</summary><category term="WPS"></category></entry><entry><title>从Windows平台到Linux平台的迁移</title><link href="http://snailhome.github.io/note/windows_to_linux.html" rel="alternate"></link><published>2015-10-29T18:40:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-29:note/windows_to_linux.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;从wWindows平台到Linux平台的迁移，不是嘴皮子说说就可以了，对于完全脑盲的人，也许简单；可以对于已经在Windows平台已经有一定使用基础的人来说，必须有替代的产品才会有迁移的动力……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对比了从Windows到Linux迁移过程中应用替代方面的艰辛，在下面罗列一些各个专业方面的应用、工具，给自己一个留存，也给后人一些经验～&lt;/p&gt;
&lt;h2 id="06588a"&gt;系统篇&lt;/h2&gt;
&lt;p&gt;既然是迁移到Linux，那么系统当然是Liunx了，可以Linux的发行版本太多，选择的余地也很大，而且针对不同的应用场景，还有不同的选择。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;服务器用途： CentOS7.1&lt;/li&gt;
&lt;li&gt;个人桌面： Linux Mint 17.2、Ubuntu 15.10&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6b21cf"&gt;办公应用篇&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WPS for Linux 9.1&lt;/li&gt;
&lt;li&gt;LibreOffice 4.4.3&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="ee3d60"&gt;开发工具编辑器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;PyCharm(收费)4.5.4&lt;/li&gt;
&lt;li&gt;SublimeText3.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="bcebb2"&gt;Markdown编辑器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Haroopad 0.13.1&lt;/li&gt;
&lt;li&gt;Retext&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="01bc63"&gt;局域网通讯&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;IPTux&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="4e54b3"&gt;下载工具&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;uGet&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="6b72a4"&gt;Windows模拟器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Wine&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="7fea6e"&gt;虚拟机&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;VirtualBox&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="912302"&gt;浏览器&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FireFox 41&lt;/li&gt;
&lt;li&gt;Chromium 45&lt;/li&gt;
&lt;/ul&gt;</summary><category term="平台迁移"></category></entry><entry><title>Linux下安装Haroopad</title><link href="http://snailhome.github.io/note/install_haroopad_on_linux.html" rel="alternate"></link><published>2015-10-28T23:02:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-28:note/install_haroopad_on_linux.html</id><summary type="html">&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;下安装&lt;code&gt;haroopad&lt;/code&gt;还是比较简单的。&lt;/p&gt;
&lt;p&gt;由于我用的是 &lt;code&gt;Linux Mint 17.2&lt;/code&gt;， 是基于 &lt;code&gt;Ubuntu 14.04&lt;/code&gt; 的发行版本，所以只要下载 &lt;code&gt;.deb&lt;/code&gt; 的安装包就可以安装了。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget -c https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-x64.deb
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;虽然安装包只有40M，可以下载速度实在太慢，好久才下全。&lt;/p&gt;
&lt;p&gt;下载完成后直接双击安装包就可以安装了，简单～&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;另外说下&lt;code&gt;Haroopad&lt;/code&gt;：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Haroopad&lt;/code&gt;是我用过&lt;code&gt;Markdown&lt;/code&gt;编辑器是比较满意的工具了，而且支持Win/Linux，这点我比较喜欢，而且就试用的情况，感觉Linux版本比Win版本用着更稳定，因为Win版本在一些机子上还有显示的问题，所以感觉就不太爽。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Haroopad&lt;/code&gt;对&lt;code&gt;Markdown&lt;/code&gt;语法的支持没得说的，都不知道要比&lt;code&gt;Retext&lt;/code&gt;好多少，所以严重支持一下～&lt;/p&gt;</summary><category term="haroopad"></category></entry><entry><title>StepUp:基于Pelican的静态博客终于搭建成功了</title><link href="http://snailhome.github.io/essay/start_blog.html" rel="alternate"></link><published>2015-10-06T13:11:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-06:essay/start_blog.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;StepUp&lt;/strong&gt;：寓意着每天提高一点点。&lt;/p&gt;
&lt;p&gt;以前的我，总是不喜笔记，很多的东西过后就忘，&lt;/p&gt;
&lt;p&gt;年过40，就开始更健忘了，今天忘东，明天忘西，&lt;/p&gt;
&lt;p&gt;渐渐的也就脱离不了笔记了～&lt;/p&gt;
&lt;p&gt;可是～～&lt;/p&gt;
&lt;p&gt;手绘的笔记不好带呀&lt;/p&gt;
&lt;p&gt;本地的电子日记有局限，电脑没有天天带身边&lt;/p&gt;
&lt;p&gt;建个Blog要收费，要数据库，要空间，要……&lt;/p&gt;
&lt;p&gt;我只是想找个可以自由记录，免费保存&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一些想法&lt;/li&gt;
&lt;li&gt;一些网摘&lt;/li&gt;
&lt;li&gt;一些记录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不需要太多的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;评论&lt;/li&gt;
&lt;li&gt;交互&lt;/li&gt;
&lt;li&gt;反馈&lt;/li&gt;
&lt;li&gt;时限&lt;/li&gt;
&lt;li&gt;实时&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以 &lt;code&gt;github&lt;/code&gt; ，所以 &lt;code&gt;Static Blog&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就够了～～&lt;/p&gt;
&lt;p&gt;我用 &lt;code&gt;Python&lt;/code&gt; ，所以我使用 &lt;code&gt;Pelican&lt;/code&gt;来搭建静态博客&lt;/p&gt;
&lt;p&gt;几经安装测试，搭建、安装主题、插件，才终于成功，&lt;/p&gt;
&lt;p&gt;前面几天一直是基于Python3的虚拟环境在搭建，诸多问题，一直不满意&lt;/p&gt;
&lt;p&gt;后来才想到使用基于Python2的虚拟环境来测试，居然一下就成功了，&lt;/p&gt;
&lt;p&gt;然后就是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;测试主题、插件&lt;/li&gt;
&lt;li&gt;测试 &lt;code&gt;pelicanconf.py&lt;/code&gt; 的配置&lt;/li&gt;
&lt;li&gt;测试各种 &lt;code&gt;make&lt;/code&gt; 命令&lt;/li&gt;
&lt;li&gt;测试 &lt;code&gt;github pages&lt;/code&gt; 的 &lt;code&gt;repository&lt;/code&gt; 的申请&lt;/li&gt;
&lt;li&gt;测试ssh密钥&lt;/li&gt;
&lt;li&gt;测试git推送生成的静态网站&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;终于，基于Pelican的静态博客终于搭建成功了&lt;/p&gt;
&lt;p&gt;没错这就是你看到的网站 &lt;strong&gt;&lt;a href="http://snailhome.github.io/"&gt;StepUp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;抢建过程可以参考 &lt;strong&gt;&lt;a href="../research/build_pelican_on_python2.html"&gt;用Pelican创建静态博客网站&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;</summary><category term="pelican"></category><category term="静态博客"></category></entry><entry><title>如何git时免输用户名密码</title><link href="http://snailhome.github.io/note/no_password_when_git.html" rel="alternate"></link><published>2015-10-06T11:23:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-06:note/no_password_when_git.html</id><summary type="html">&lt;p&gt;我要push静态博客时都要输入用户名和密码，特麻烦，百度了一下有好几种免输密码的方式，不知所云，后来尝试了一种成功，看官看过来。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; output/.git
$ vim config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到这一段&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将其改为：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://yourname:password@github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，这个操作最好是在自己的机器上，毕竟用户名和密码明文放在上面，在其它机器上还是老老实实输入用户名和密码吧。&lt;/p&gt;</summary><category term="git"></category><category term="免密码"></category></entry><entry><title>10 个实用的 Bash alias</title><link href="http://snailhome.github.io/note/about_alias.html" rel="alternate"></link><published>2015-10-06T10:48:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-06:note/about_alias.html</id><summary type="html">&lt;p&gt;alias 即“别名”，为便于理解，你可以将其看成是一个命令的快捷方式。使用 alias 的最大好处是，可以简化输入，从而为你节省时间，并提高效率。定义的 alias 可以保存到 ~/.bashrc 文件中，以后在命令行中就可以直接使用了。&lt;/p&gt;
&lt;p&gt;要设置别名&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下面介绍了 10 个 Bash alias，个人觉得都很实用：&lt;/p&gt;
&lt;h2 id="255b55"&gt;几个有用的别名用法&lt;/h2&gt;
&lt;h3 id="44c31b"&gt;ssh 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias server_name="ssh -v -l USERNAME IP ADDRESS"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更改 server_name、USERNAME 及 IP 地址以适应你的需要。对于经常要使用 ssh 登录远程 shell 的同学来说，这是一个值得收藏的别名。&lt;/p&gt;
&lt;h3 id="769102"&gt;ls 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias ll="ls -l"，另一个 alias la="ls -a"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;意思很明显，在此就不多作解释了。&lt;/p&gt;
&lt;h3 id="5d5bd1"&gt;rm 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias rm="rm -i"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个别名让你更加安全地执行删除操作。&lt;/p&gt;
&lt;h3 id="f07115"&gt;df 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias df="df -h"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;让你以 MB 或 G 为单位查看磁盘的空间。&lt;/p&gt;
&lt;h3 id="8f5252"&gt;Firefox 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias ff1="/home/jlwallen/firefox/firefox" 及 alias ff2="/home/jlwallen/firefoxb3/firefox"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;适合使用两个 Firefox 版本的朋友，如一个稳定版，另一个为测试版。&lt;/p&gt;
&lt;h3 id="04ee60"&gt;书签别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias fftr="/home/jlwallen/firefox/firefox http://linuxtoy.org"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;用于打开一个指定的网址。&lt;/p&gt;
&lt;h3 id="5842eb"&gt;文件别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias emenu="aterm nano -e ~/.e16/menus/user_apps"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如常常需要编辑的配置文件。&lt;/p&gt;
&lt;h3 id="f8e198"&gt;apt-get update 别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias update="sudo apt-get update"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;使用其他 Linux 发行版的同学可以换一下其中的 sudo apt-get update。&lt;/p&gt;
&lt;h3 id="a2c9a8"&gt;rpm 批量安装别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias brpm="rpm -ivh ~/RPM/*rpm"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;便于同时安装多个 rpm 包。&lt;/p&gt;
&lt;h3 id="13342f"&gt;长路径别名&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias astart="cd ~/GNUstep/Library/AfterStep/start"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于需要经常访问的路径特别长的目录也可为其定义别名。&lt;/p&gt;
&lt;h2 id="a6f784"&gt;我的别名用法&lt;/h2&gt;
&lt;h3 id="339219"&gt;进入虚拟环境&lt;/h3&gt;
&lt;p&gt;我有一个 &lt;code&gt;virtualenv&lt;/code&gt; 的虚拟环境 &lt;code&gt;env2p&lt;/code&gt; ，为了快速进入虚拟环境&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias se2p="cd ~/env2p&amp;amp;source bin/activate"
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;我只要se2p就进入了虚拟环境。&lt;/p&gt;
&lt;h3 id="b05767"&gt;推送 &lt;code&gt;git&lt;/code&gt; 到 &lt;code&gt;github.io&lt;/code&gt;&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;alias git2p="cd ~/env2p/blog&amp;amp;&amp;amp;make publish&amp;amp;&amp;amp;cd output&amp;amp;&amp;amp;git add -A&amp;amp;&amp;amp;git commit -m 'Git My Static Blog'&amp;amp;&amp;amp;git push origin master"
&lt;/pre&gt;&lt;/div&gt;</summary><category term="bash"></category><category term="alias"></category><category term="别名"></category></entry><entry><title>用Pelican创建静态博客网站</title><link href="http://snailhome.github.io/research/build_pelican_on_python2.html" rel="alternate"></link><published>2015-10-05T00:00:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-10-05:research/build_pelican_on_python2.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;基于 &lt;code&gt;Pelican&lt;/code&gt; 的 &lt;code&gt;niu-x2-sidebar&lt;/code&gt; 主题的静态博客网站在 &lt;code&gt;python3.4&lt;/code&gt; 下尝试多次，均不能成功，后试过 &lt;code&gt;python2.7&lt;/code&gt; ，第一次成功，后又有配置问题导致显示不正常，经过多方调试，终得以成功，记录下安装及配置的过程，用于留存。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="cbfa54"&gt;创建运行环境&lt;/h2&gt;
&lt;h3 id="b41e5d"&gt;创建虚拟环境&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; ~
$ virtualenv -p python2 env2p
New python executable in env2p/bin/python
Installing setuptools, pip, wheel...done.

$ &lt;span class="nb"&gt;cd&lt;/span&gt; env2p
$ &lt;span class="nb"&gt;source&lt;/span&gt; bin/activate
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ pip list
pip &lt;span class="o"&gt;(&lt;/span&gt;7.1.2&lt;span class="o"&gt;)&lt;/span&gt;
setuptools &lt;span class="o"&gt;(&lt;/span&gt;18.2&lt;span class="o"&gt;)&lt;/span&gt;
urllib3 &lt;span class="o"&gt;(&lt;/span&gt;1.12&lt;span class="o"&gt;)&lt;/span&gt;
wheel &lt;span class="o"&gt;(&lt;/span&gt;0.24.0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ad57b5"&gt;安装 &lt;code&gt;pelican&lt;/code&gt; 支持&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ pip install pelican markdown
......
Installing collected packages: pygments, pytz, six, feedgenerator, unidecode, python-dateutil, MarkupSafe, jinja2, docutils, blinker, pelican, markdown
Successfully installed MarkupSafe-0.23 blinker-1.4 docutils-0.12 feedgenerator-1.7 jinja2-2.8 markdown-2.6.2 pelican-3.6.3 pygments-2.0.2 python-dateutil-2.4.2 pytz-2015.6 six-1.9.0 unidecode-0.4.18
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ pip list
blinker &lt;span class="o"&gt;(&lt;/span&gt;1.4&lt;span class="o"&gt;)&lt;/span&gt;
docutils &lt;span class="o"&gt;(&lt;/span&gt;0.12&lt;span class="o"&gt;)&lt;/span&gt;
feedgenerator &lt;span class="o"&gt;(&lt;/span&gt;1.7&lt;span class="o"&gt;)&lt;/span&gt;
Jinja2 &lt;span class="o"&gt;(&lt;/span&gt;2.8&lt;span class="o"&gt;)&lt;/span&gt;
Markdown &lt;span class="o"&gt;(&lt;/span&gt;2.6.2&lt;span class="o"&gt;)&lt;/span&gt;
MarkupSafe &lt;span class="o"&gt;(&lt;/span&gt;0.23&lt;span class="o"&gt;)&lt;/span&gt;
pelican &lt;span class="o"&gt;(&lt;/span&gt;3.6.3&lt;span class="o"&gt;)&lt;/span&gt;
pip &lt;span class="o"&gt;(&lt;/span&gt;7.1.2&lt;span class="o"&gt;)&lt;/span&gt;
Pygments &lt;span class="o"&gt;(&lt;/span&gt;2.0.2&lt;span class="o"&gt;)&lt;/span&gt;
python-dateutil &lt;span class="o"&gt;(&lt;/span&gt;2.4.2&lt;span class="o"&gt;)&lt;/span&gt;
pytz &lt;span class="o"&gt;(&lt;/span&gt;2015.6&lt;span class="o"&gt;)&lt;/span&gt;
setuptools &lt;span class="o"&gt;(&lt;/span&gt;18.2&lt;span class="o"&gt;)&lt;/span&gt;
six &lt;span class="o"&gt;(&lt;/span&gt;1.9.0&lt;span class="o"&gt;)&lt;/span&gt;
Unidecode &lt;span class="o"&gt;(&lt;/span&gt;0.4.18&lt;span class="o"&gt;)&lt;/span&gt;
urllib3 &lt;span class="o"&gt;(&lt;/span&gt;1.12&lt;span class="o"&gt;)&lt;/span&gt;
wheel &lt;span class="o"&gt;(&lt;/span&gt;0.24.0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="a4730b"&gt;创建静态博客文件目录结构及初始配置&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(env2p) $ mkdir blog
(env2p) $ cd blog
(env2p) $ pelican-quickstart
Welcome to pelican-quickstart v3.6.3.

This script will help you create a new Pelican-based website.

Please answer the following questions so this script can generate the files
needed by Pelican.


&amp;gt; Where do you want to create your new web site? [.] 
&amp;gt; What will be the title of this web site? STEPUP
&amp;gt; Who will be the author of this web site? 蜗牛
&amp;gt; What will be the default language of this web site? [en] zh
&amp;gt; Do you want to specify a URL prefix? e.g., http://example.com   (Y/n) 
&amp;gt; What is your URL prefix? (see above example; no trailing slash) http://snailhome.github.io
&amp;gt; Do you want to enable article pagination? (Y/n) 
&amp;gt; How many articles per page do you want? [10] 
&amp;gt; What is your time zone? [Europe/Paris] Asia/Shanghai
&amp;gt; Do you want to generate a Fabfile/Makefile to automate generation and publishing? (Y/n) 
&amp;gt; Do you want an auto-reload &amp;amp; simpleHTTP script to assist with theme and site development? (Y/n) 
&amp;gt; Do you want to upload your website using FTP? (y/N) 
&amp;gt; Do you want to upload your website using SSH? (y/N) 
&amp;gt; Do you want to upload your website using Dropbox? (y/N) 
&amp;gt; Do you want to upload your website using S3? (y/N) 
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) 
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) y
&amp;gt; Is this your personal page (username.github.io)? (y/N) y
Done. Your new project is available at /home/snail/env2p/blog
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="d365c1"&gt;安装 &lt;code&gt;niu-x2-sidebar&lt;/code&gt; 主题模板&lt;/h3&gt;
&lt;h4 id="7f70ad"&gt;安装系统依赖&lt;/h4&gt;
&lt;p&gt;对于Debian系：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install python-dev libjpeg-dev zlib1g-dev
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;对于openSUSE:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo zypper in gcc make git
$ sudo zypper in python-devel libjpeg8-devel zlib-devel
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这些都是&lt;code&gt;Pillow&lt;/code&gt;需要用到的。&lt;/p&gt;
&lt;p&gt;生成zh_CN.UTF-8 locale&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo locale-gen zh_CN.UTF-8
&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;openSUSE默认就是，可以不用设置这个&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="9baebf"&gt;安装 &lt;code&gt;python&lt;/code&gt; 依赖&lt;/h4&gt;
&lt;p&gt;上面的主题或插件的额外依赖&lt;/p&gt;
&lt;p&gt;pelican-minify: 压缩html文件
beautifulsoup4: 解析html文件
Pillow: PIL&lt;/p&gt;
&lt;p&gt;使用pip安装&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ pip install pelican-minify beautifulsoup4 Pillow
......
Installing collected packages: htmlmin, pelican-minify, beautifulsoup4, Pillow
Successfully installed Pillow-3.0.0 beautifulsoup4-4.4.1 htmlmin-0.1.10 pelican-minify-0.8
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ pip list
beautifulsoup4 &lt;span class="o"&gt;(&lt;/span&gt;4.4.1&lt;span class="o"&gt;)&lt;/span&gt;
blinker &lt;span class="o"&gt;(&lt;/span&gt;1.4&lt;span class="o"&gt;)&lt;/span&gt;
docutils &lt;span class="o"&gt;(&lt;/span&gt;0.12&lt;span class="o"&gt;)&lt;/span&gt;
feedgenerator &lt;span class="o"&gt;(&lt;/span&gt;1.7&lt;span class="o"&gt;)&lt;/span&gt;
htmlmin &lt;span class="o"&gt;(&lt;/span&gt;0.1.10&lt;span class="o"&gt;)&lt;/span&gt;
Jinja2 &lt;span class="o"&gt;(&lt;/span&gt;2.8&lt;span class="o"&gt;)&lt;/span&gt;
Markdown &lt;span class="o"&gt;(&lt;/span&gt;2.6.2&lt;span class="o"&gt;)&lt;/span&gt;
MarkupSafe &lt;span class="o"&gt;(&lt;/span&gt;0.23&lt;span class="o"&gt;)&lt;/span&gt;
pelican &lt;span class="o"&gt;(&lt;/span&gt;3.6.3&lt;span class="o"&gt;)&lt;/span&gt;
pelican-minify &lt;span class="o"&gt;(&lt;/span&gt;0.8&lt;span class="o"&gt;)&lt;/span&gt;
Pillow &lt;span class="o"&gt;(&lt;/span&gt;3.0.0&lt;span class="o"&gt;)&lt;/span&gt;
pip &lt;span class="o"&gt;(&lt;/span&gt;7.1.2&lt;span class="o"&gt;)&lt;/span&gt;
Pygments &lt;span class="o"&gt;(&lt;/span&gt;2.0.2&lt;span class="o"&gt;)&lt;/span&gt;
python-dateutil &lt;span class="o"&gt;(&lt;/span&gt;2.4.2&lt;span class="o"&gt;)&lt;/span&gt;
pytz &lt;span class="o"&gt;(&lt;/span&gt;2015.6&lt;span class="o"&gt;)&lt;/span&gt;
setuptools &lt;span class="o"&gt;(&lt;/span&gt;18.2&lt;span class="o"&gt;)&lt;/span&gt;
six &lt;span class="o"&gt;(&lt;/span&gt;1.9.0&lt;span class="o"&gt;)&lt;/span&gt;
Unidecode &lt;span class="o"&gt;(&lt;/span&gt;0.4.18&lt;span class="o"&gt;)&lt;/span&gt;
urllib3 &lt;span class="o"&gt;(&lt;/span&gt;1.12&lt;span class="o"&gt;)&lt;/span&gt;
wheel &lt;span class="o"&gt;(&lt;/span&gt;0.24.0&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="f8a47d"&gt;安装 &lt;code&gt;niu-x2-sidebar&lt;/code&gt; 主题&lt;/h4&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir themes
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; themes
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/mawenbao/niu-x2-sidebar.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ ls
niu-x2-sidebar
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;/pre&gt;&lt;/div&gt;
&lt;h4 id="c2bb8d"&gt;安装 &lt;code&gt;niu-x2-sidebar&lt;/code&gt; 主题插件&lt;/h4&gt;
&lt;p&gt;extract_headings插件: 从html文件里提取h1~h6标题并生成目录列表
niux2_hermit_player插件: 音频播放器
niux2_lazyload_helper插件: 延迟加载图片
pelican-update-date插件: 提取文章内的修改时间
sitemap插件: 生成sitemap
summary插件: 提取第一句话作为摘要&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir plugins
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; plugins
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/mawenbao/extract_headings.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/mawenbao/niux2_hermit_player.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/mawenbao/niux2_lazyload_helper.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/mawenbao/pelican-update-date.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; ../../
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git clone https://github.com/getpelican/pelican-plugins.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ cp -R pelican-plugins/sitemap blog/plugins/
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ cp -R pelican-plugins/summary blog/plugins/
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; blog
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ ls plugins
extract_headings     niux2_lazyload_helper  sitemap
niux2_hermit_player  pelican-update-date    summary
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="b39e48"&gt;配置 &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;复制了原作者关于&lt;a href="http://blog.atime.me/note/pelican-setup-summary.html"&gt;Pelican静态博客搭建总结&lt;/a&gt;的配置，并作了适当修改&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u'蜗牛'&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u'STEPUP'&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Asia/Shanghai'&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'zh_CN'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE_FORMAT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S'&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_DATE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'fs'&lt;/span&gt;  &lt;span class="c1"&gt;# use filesystem's mtime&lt;/span&gt;
&lt;span class="n"&gt;LOCALE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'zh_CN.utf8'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u'zh_CN'&lt;/span&gt;
&lt;span class="n"&gt;FILENAME_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'(?P&amp;lt;slug&amp;gt;.*)'&lt;/span&gt;
&lt;span class="c1"&gt;#GOOGLE_ANALYTICS = 'XXXXXX'&lt;/span&gt;
&lt;span class="c1"&gt;# feed config&lt;/span&gt;
&lt;span class="n"&gt;FEED_DOMAIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SITEURL&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'feed.xml'&lt;/span&gt;
&lt;span class="n"&gt;FEED_MAX_ITEMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="c1"&gt;# use directory name as category if not set&lt;/span&gt;
&lt;span class="n"&gt;USE_FOLDER_AS_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DELETE_OUTPUT_DIRECTORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'uncategorized'&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="n"&gt;READERS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'html'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'images'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'static'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'extra'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/CNAME'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'CNAME'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/.nojekyll'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'.nojekyll'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/README'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'README.md'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/favicon.ico'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'favicon.ico'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/LICENSE.txt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'LICENSE.txt'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/robots.txt'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'robots.txt'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'extra/BingSiteAuth.xml'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'path'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'BingSiteAuth.xml'&lt;/span&gt; &lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{category}/{slug}.html'&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt;
&lt;span class="n"&gt;PAGE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{slug}.html'&lt;/span&gt;
&lt;span class="n"&gt;PAGE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;PAGE_URL&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'{slug}/index.html'&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;CATEGORY_URL&lt;/span&gt;
&lt;span class="n"&gt;TAG_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'tag/{slug}.html'&lt;/span&gt;
&lt;span class="n"&gt;TAG_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TAG_URL&lt;/span&gt;
&lt;span class="n"&gt;TAGS_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'tag/index.html'&lt;/span&gt;
&lt;span class="c1"&gt;# disable author pages&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
&lt;span class="n"&gt;AUTHORS_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;

&lt;span class="n"&gt;TEMPLATE_PAGES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"404.html"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"404.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s2"&gt;"archives_updatedate.html"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"archives_updatedate.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s1"&gt;'jinja2.ext.ExprStmtExtension'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# plugin config&lt;/span&gt;
&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'./plugins'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;#'pandoc_reader',&lt;/span&gt;
    &lt;span class="c1"&gt;#'gzip_cache',&lt;/span&gt;
    &lt;span class="s1"&gt;'pelican-update-date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'extract_headings'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'sitemap'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'summary'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'niux2_lazyload_helper'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'niux2_hermit_player'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="c1"&gt;#'minify',&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;UPDATEDATE_MODE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'metadata'&lt;/span&gt;

&lt;span class="c1"&gt;# extrac_headings plugin config&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;md5&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_slugify&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sep&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;md5&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'UTF-8'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;digest&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hex'&lt;/span&gt;&lt;span class="p"&gt;)[:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;MY_SLUGIFY_FUNC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_slugify&lt;/span&gt;
&lt;span class="n"&gt;MY_TOC_LIST_TYPE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'ol'&lt;/span&gt;

&lt;span class="c1"&gt;# niux2_lazyload_helper plugin config&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;my_img_url_2_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'//static.atime.me'&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"ignore "&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abspath&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'static'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;):]))&lt;/span&gt;
&lt;span class="n"&gt;MY_IMG_URL2PATH_FUNC&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_img_url_2_path&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;markdown.extensions&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;codehilite&lt;/span&gt;
&lt;span class="n"&gt;MD_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="s1"&gt;'extra'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'footnotes'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'tables'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;codehilite&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CodeHiliteExtension&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;configs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'linenums'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'guess_lang'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)]),&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;

&lt;span class="c1"&gt;# sitemap plugin config&lt;/span&gt;
&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'format'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'xml'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;'priorities'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'indexes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'changefreqs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'indexes'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'daily'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'monthly'&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# cache policy, currently no cache&lt;/span&gt;
&lt;span class="n"&gt;LOAD_CONTENT_CACHE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="n"&gt;CACHE_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="c1"&gt;#CHECK_MODIFIED_METHOD = 'md5'&lt;/span&gt;

&lt;span class="c1"&gt;# theme config&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'./themes/niu-x2-sidebar'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_DEBUG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;

&lt;span class="c1"&gt;# niu-x2 theme config&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_AUTHOR_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'作者'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_404_TITLE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'404错误 页面未找到!'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_404_INFO_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'请求页面未找到!'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_TAG_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'标签'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_ARCHIVE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'存档'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_ARCHIVE_UPDATEDATE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'存档 (按修改时间)'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_CATEGORY_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'分类'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_TAG_CLEAR_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'清空'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_TAG_FILTER_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'过滤标签，不妨试试[0-9]{3}'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_HEADER_TOC_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'目录'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_SEARCH_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'搜索'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_SEARCH_PLACEHOLDER_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'按回车开始搜索 ...'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_COMMENTS_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'评论'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_PUBLISHED_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'发布时间'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LASTMOD_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'最后修改'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_PAGE_TITLE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'页面'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_RECENT_UPDATE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'最近修改'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_HIDE_SIDEBAR_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'隐藏侧边栏'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_SHOW_SIDEBAR_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'显示侧边栏'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_REVISION_HISTORY_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'修订历史'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_VIEW_SOURCE_TRANSL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'查看源文件'&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_DUOSHUO_SHORTNAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'snailhome'&lt;/span&gt;
&lt;span class="c1"&gt;#NIUX2_DUOSHUO_THREAD_KEY = 'slug'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_PYGMENTS_THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'github'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_PAGINATOR_LENGTH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;11&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_RECENT_UPDATE_NUM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_FAVICON_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/favicon.ico'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_GOOGLE_CSE_ID&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'XXXXXX'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_DISPLAY_TITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LAZY_LOAD&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LAZY_LOAD_TEXT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'orz 努力加载中'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LAZY_LOAD_ICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'icon-spin icon-spinner2'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_TOOLBAR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_TOOLBAR_LOAD_ICON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'icon-spin icon-4x icon-spinner9'&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_LIB_FONT_ICONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/theme/font-icons'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LIB_JQUERY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/theme/js/jquery-1.11.0.min.js'&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_LIB_BOOTSTRAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'/theme'&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_CATEGORY_MAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'code'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'代码'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-code'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'collection'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'搜藏'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-briefcase'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'essay'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'随笔'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-leaf'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'life'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'日常'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-coffee'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'note'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'笔记'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-book'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s1"&gt;'research'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'研究'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-flask'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_HEADER_SECTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'关于'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'关于本网站'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/about.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-anchor'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c1"&gt;#('使用协议', '使用协议', '/agreement.html', 'icon-exclamation-circle'),&lt;/span&gt;
    &lt;span class="c1"&gt;#('项目', '我的项目', '/my_projects.html', 'icon-rocket'),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'标签'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'标签'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/tag/'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-tag'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_HEADER_DROPDOWN_SECTIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;OrderedDict&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;NIUX2_HEADER_DROPDOWN_SECTIONS&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'存档'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-archive'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'存档 (按发布时间)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'archives order by publish time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/archives.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-calendar'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'存档 (按修改时间)'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'archives order by modify time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/archives_updatedate.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'icon-pencil'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_FOOTER_LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'关于'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'关于'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/about.html'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="c1"&gt;#('使用协议', 'terms, license and privacy etc.', '/agreement.html', ''),&lt;/span&gt;
    &lt;span class="c1"&gt;#('XICP备XXX号', '备案号', '/', ''),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;NIUX2_FOOTER_ICONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="c1"&gt;#('icon-key', 'my public key', '/my_gnupg.html'),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'icon-envelope-o'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'我的邮箱'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'mailto: snail.zh@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'icon-github-alt'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'我的GithubPage'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'http://github.com/snailhome'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'icon-rss'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'RSS'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'/feed.xml'&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="d3a354"&gt;创建内容目录下的相关子目录&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; content
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir pages
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir static
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir extra
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir code
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir collection
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir essay
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir life
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir note
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir research
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ ls
code  collection  essay  extra  life  note  pages  research  static
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="b49198"&gt;本地生成测试&lt;/h2&gt;
&lt;h3 id="bac0a5"&gt;生成输出文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ make html
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="7795ac"&gt;查看网站生成的效果&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ make serve
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;然后打开浏览器，输入 &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt; 就可以看到网站的效果了。
也可以把上面两步并成一步，自动检测文件更新并生成 &lt;code&gt;html&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="91d14b"&gt;运行测试服务器&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ make devserver
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这个方法会自动监测文件的修改，并自动生成网站，&lt;/p&gt;
&lt;p&gt;所以当我们修改&lt;code&gt;.md&lt;/code&gt;文件保存后，直接刷新 &lt;code&gt;http://127.0.0.1:8000&lt;/code&gt; 就可以看到更新后的效果了。&lt;/p&gt;
&lt;h2 id="306b20"&gt;发布并git&lt;/h2&gt;
&lt;h3 id="ec13c9"&gt;生成ssh密钥&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ ls
config  id_rsa  id_rsa.pub  known_hosts
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ mkdir key_backup
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ cp id_rsa* key_backup
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ rm id_rsa*
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ ssh-keygen -t rsa -C &lt;span class="s2"&gt;"邮件地址@youremail.com"&lt;/span&gt;
Generating public/private rsa key pair.
Enter file in which to save the key &lt;span class="o"&gt;(&lt;/span&gt;/Users/your_user_directory/.ssh/id_rsa&lt;span class="o"&gt;)&lt;/span&gt;:&amp;lt;回车就好&amp;gt;
Enter passphrase &lt;span class="o"&gt;(&lt;/span&gt;empty &lt;span class="k"&gt;for&lt;/span&gt; no passphrase&lt;span class="o"&gt;)&lt;/span&gt;:&amp;lt;输入加密串&amp;gt;
Enter same passphrase again:&amp;lt;再次输入加密串&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ee2e4a"&gt;添加SSH Key到GitHub：&lt;/h3&gt;
&lt;p&gt;在本机设置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。&lt;/p&gt;
&lt;p&gt;用文本编辑工具打开id_rsa.pub文件，如果看不到这个文件，你需要设置显示隐藏文件。准确的复制这个文件的内容，才能保证设置的成功。&lt;/p&gt;
&lt;p&gt;在GitHub的主页上点击设置按钮： &lt;/p&gt;
&lt;p&gt;选择SSH Keys项，把复制的内容粘贴进去，然后点击Add Key按钮即可。&lt;/p&gt;
&lt;h3 id="124a56"&gt;ssh连接测试&lt;/h3&gt;
&lt;p&gt;可以输入下面的命令，看看设置是否成功，git@github.com的部分不要修改： &lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -T git@github.com
Hi &amp;lt;em&amp;gt;username&amp;lt;/em&amp;gt;! You&lt;span class="err"&gt;'&lt;/span&gt;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;如果有这个显示，就表示SSh连接是成功的。&lt;/p&gt;
&lt;p&gt;下面我们就可以git网站了。&lt;/p&gt;
&lt;h3 id="a3e59c"&gt;git静态网站&lt;/h3&gt;
&lt;p&gt;git前&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git config --global user.email &lt;span class="s2"&gt;"you@example.com"&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git config --global user.name &lt;span class="s2"&gt;"Your Name"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;初次git时&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; output
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git init
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git add .
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git remote add origin https://github.com/snailhome/snailhome.github.io.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git commit -m &lt;span class="s2"&gt;"First Updated"&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git push -u origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;提示出错，貌似要先 &lt;code&gt;pull&lt;/code&gt; 一下，于是&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git pull origin master
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git commit -a
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git push -u origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;推送成功。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般而言， &lt;code&gt;git init&lt;/code&gt; 后需要（未证实必须）
$ git pull origin master //先同步远程文件，后面的参数会自动连接你远程的文件
$ git status //查看本地自己修改了多少文件，此步非必须
$ git add . //添加远程不存在的git文件
$ git commit * -m "what I want told to someone"  //备注信息
$ git push origin master //更新到远程服务器上&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以后每次要推送时&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ make publish
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; output
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git add -A
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git commit -m &lt;span class="s2"&gt;"Commit Info"&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ git push -u origin master
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;就可以了～～&lt;/p&gt;
&lt;p&gt;为了方便操作我做了别名&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ vim ~/.bashrc

#输入以下别名设置
alias sa='source bin/activate'
alias da='deactivate'
alias git2p='cd ~/env2p/blog&amp;amp;&amp;amp;make publish&amp;amp;&amp;amp;cd output&amp;amp;&amp;amp; git add -A&amp;amp;&amp;amp;git commit -m "Commit Info"&amp;amp;&amp;amp;git push -u origin master&amp;amp;&amp;amp;cd -'

$ source ~/.bashrc  ## 即时生效
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这样，我打开终端输入 &lt;code&gt;sa&lt;/code&gt; 就直接进入虚拟环境，输入 &lt;code&gt;git2p&lt;/code&gt; 就直接生成发布文档并git到我的page里，输入 &lt;code&gt;da&lt;/code&gt; 就直接退出虚拟环境。&lt;/p&gt;
&lt;p&gt;但是还不够好，每次都需要输入用户名和密码，可以免输用户名和密码吗?&lt;/p&gt;
&lt;h3 id="be3806"&gt;设置git时免输用户名和密码&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ &lt;span class="nb"&gt;cd&lt;/span&gt; output/.git
&lt;span class="o"&gt;(&lt;/span&gt;env2p&lt;span class="o"&gt;)&lt;/span&gt; $ vim config
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看到这一段&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;将其改为：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[remote "origin"]
        url = https://yourname:password@github.com/yourname/yourname.github.io.git
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;当然，这个操作最好是在自己的机器上，毕竟用户名和密码明文放在上面，在其它机器上还是老老实实输入用户名和密码吧。&lt;/p&gt;</summary><category term="Python2"></category><category term="Pelican"></category><category term="静态博客"></category></entry><entry><title>CentOS7下安装Fcitx小企鹅输入法</title><link href="http://snailhome.github.io/note/fcitx_in_centos7.html" rel="alternate"></link><published>2015-09-29T23:07:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-29:note/fcitx_in_centos7.html</id><summary type="html">&lt;h1 id="bdd33a"&gt;CentOS7下安装Fcitx小企鹅输入法&lt;/h1&gt;
&lt;p&gt;感觉CentOS7自带的ibus输入法用得不尽人意，考虑安装个Fcitx小企鹅输入法试试，心动不如行动，Let's go～&lt;/p&gt;
&lt;h2 id="8c4cab"&gt;1. 加入EPEL源&lt;/h2&gt;
&lt;p&gt;EPEL7几乎是CentOS必备的源:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install epel-release
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="74e7ae"&gt;2. 添加mosquito-myrepo源&lt;/h2&gt;
&lt;p&gt;mosquito-myrepo是一个私人制作的第三方源，其中包含了fcitx输入法。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;项目地址： https://github.com/1dot75cm/myrepo
支持的发行版： Fedora 19/20/21/rawhide 以及RHEL/CentOS 7
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum-config-manager --add-repo&lt;span class="o"&gt;=&lt;/span&gt;https://copr.fedoraproject.org/coprs/mosquito/myrepo/repo/epel-7/mosquito-myrepo-epel-7.repo
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="7cfd47"&gt;3. 卸载原来的ibus输入法&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum remove ibus
$ sudo yum remove imsettings imsettings-libs im-chooser
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="59570b"&gt;4. 安装输入法&lt;/h2&gt;
&lt;p&gt;可以选择下面的各种输入法中的某一个或多个:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install fcitx-table-wbpy &lt;span class="c1"&gt;# 五笔拼音输入法&lt;/span&gt;
$ sudo yum install fcitx-googlepinyin fcitx-cloudpinyin &lt;span class="c1"&gt;# 谷歌拼音输入法&lt;/span&gt;
$ sudo yum install fcitx-qimpanel-configtool &lt;span class="c1"&gt;# 输入法面板设置&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="32dbcb"&gt;5. 配置Fcitx&lt;/h2&gt;
&lt;p&gt;在~/.bashrc中添加如下内容&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;GTK_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fcitx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;QT_IM_MODULE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;fcitx
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;XMODIFIERS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;”@im&lt;span class="o"&gt;=&lt;/span&gt;fcitx”
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="6d107a"&gt;6. 关闭gnome-shell 对键盘的监听，然后切换输入法为fcitx:&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo pkill ibus-daemon
$ sudo gsettings &lt;span class="nb"&gt;set&lt;/span&gt; org.gnome.settings-daemon.plugins.keyboard active &lt;span class="nb"&gt;false&lt;/span&gt;
$ sudo imsettings-switch fcitx
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="d49982"&gt;7. 清理工作&lt;/h2&gt;
&lt;p&gt;mosquito-myrepo在不断地支持更多的软件，这也进一步造成该repo中的软件与base、EPEL中的软件存在版本冲突，在该repo的项目主页中建议安装yum的优先级插件 &lt;code&gt;yum-plugin-priorities&lt;/code&gt; ，这在一定程度上会缓解版本冲突问题，但无法从根本上避免。&lt;/p&gt;
&lt;p&gt;鉴于多个repo的版本冲突会造成一些麻烦，最好的办法还是在安装完需要的软件之后就禁用该repo，需要的时候再启用。&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/yum.repos.d/mosquito-myrepo-epel-7.repo&lt;/code&gt; ，将其中的 &lt;code&gt;enable=1&lt;/code&gt; 改成 &lt;code&gt;enable=0&lt;/code&gt; 即可。&lt;/p&gt;
&lt;h2 id="cc6739"&gt;8. 启用fcitx输入法&lt;/h2&gt;
&lt;p&gt;重启系统，fcitx自动启动，但图标藏在桌面右下角的通知栏中
打开fcitx的配置工具，选择输入法标签点”+”可以搜索并添加输入法&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Ctrl+空格&lt;/code&gt;开关输入法&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Ctrl+Shift&lt;/code&gt;切换输入法&lt;/p&gt;</summary><category term="CentOs7"></category><category term="Fcitx"></category></entry><entry><title>Django后台在记录保存时先保存旧记录内容</title><link href="http://snailhome.github.io/note/backup_record_before_save_in_Django.html" rel="alternate"></link><published>2015-09-21T22:14:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-21:note/backup_record_before_save_in_Django.html</id><summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;场景：&lt;/strong&gt;&lt;br/&gt;
在一些重要的数据表，如设备台账表里，我们希望在记录保存时能够先保存一下旧记录内容，以便出现错误修改时能反查，恢复，这就是我们的需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;首先我们考虑一下，各数据表数据结构各不相同，如果针对每一个数据表做一个备份表太过繁琐，所以我们考虑只用一个&lt;code&gt;TextField&lt;/code&gt;来保存旧记录内容，而把记录的各字段内容生成&lt;code&gt;Json&lt;/code&gt;的形式保存到&lt;code&gt;TextField&lt;/code&gt;中，就可以不用管各数据表的字段有多少，再附上方便检索和引用的表名、记录号、修改时间、操作人员等字段信息，那一个备份表就基本上够了。&lt;/p&gt;
&lt;p&gt;我们在&lt;code&gt;recordbackup&lt;/code&gt;这个应用里&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup.models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.db&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;

&lt;span class="c1"&gt;# Create your models here.&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'应用'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;blank&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'数据表'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IntegerField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'记录号'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'原记录内容'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;modified_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DateTimeField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'修改时间'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CharField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;max_length&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'操作人'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Meta&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;verbose_name_plural&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;verbose_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'记录备份'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;创建&lt;code&gt;admin.py&lt;/code&gt;用于后台查看备份数据，&lt;strong&gt;只读&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup/admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.contrib&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;admin&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;

&lt;span class="c1"&gt;# Register your models here.&lt;/span&gt;

&lt;span class="nd"&gt;@admin.register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RecordBackAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'modified_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'list_operate'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;readonly_fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'rid'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'modified_time'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;list_filter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'app'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'model'&lt;/span&gt;&lt;span class="p"&gt;,)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_operate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;a href="/admin/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;/"&amp;gt;&amp;lt;i class="icon-th-list" title="查看原记录"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'操作'&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;生成相关数据表&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./manage.py makemigrations
./manage.py migrate
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;再创建一个&lt;code&gt;utils.py&lt;/code&gt;用于转换记录为&lt;code&gt;Json&lt;/code&gt;和保存旧记录功能的函数。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# recordbackup/utils.py&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    对对象进行json序列化，以json序列方式保存记录内容&lt;/span&gt;
&lt;span class="sd"&gt;    :param obj: 记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :return: 返回json串&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="n"&gt;fields&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;fields&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt; %H:%M:%S'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;date&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;OldRecordSave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;    保存旧记录的数据&lt;/span&gt;
&lt;span class="sd"&gt;    :param self: 修改前的记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :param request:&lt;/span&gt;
&lt;span class="sd"&gt;    :param obj: 修改后的记录对象&lt;/span&gt;
&lt;span class="sd"&gt;    :param form: 表单数据&lt;/span&gt;
&lt;span class="sd"&gt;    :param change: 表单数据是否被修改&lt;/span&gt;
&lt;span class="sd"&gt;    :return: None&lt;/span&gt;
&lt;span class="sd"&gt;    """&lt;/span&gt;
    &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RecordBack&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;# 更改的时候&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RecordBack&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_meta&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app_label&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;
        &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modified_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;obj_original&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;objects&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;obj_original&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;obj_original&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
            &lt;span class="n"&gt;rb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;# 新增的时候&lt;/span&gt;
        &lt;span class="k"&gt;pass&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在记录备份的功能可以用了，我们在台账数据表&lt;code&gt;PcAdmin&lt;/code&gt;的&lt;code&gt;save_model()&lt;/code&gt;里加了保存旧记录的操作&lt;code&gt;OldRecordSave()&lt;/code&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# pc/admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;.models&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;recordbackup.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;OldRecordSave&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;PcAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;......&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;save_model&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;OldRecordSave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;form&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 保存旧记录的数据到备份表&lt;/span&gt;
        &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;save&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在我们可以做一个测试，进入PC的编辑页面，修改一个字段信息，然后保存，我们看看&lt;code&gt;记录备份&lt;/code&gt;表是不是多出一条记录，内容正是PC保存前的内容。
类似的，我们只要在需要保存旧数据的admin中引入&lt;code&gt;from recordbackup.utils import OldRecordSave&lt;/code&gt;，再在&lt;code&gt;save_model()&lt;/code&gt;的&lt;code&gt;obj.save()&lt;/code&gt;前加入&lt;code&gt;OldRecordSave(self, request, obj, form, change)&lt;/code&gt;就可以实现旧记录数据的保存了。&lt;/p&gt;</summary><category term="Django"></category><category term="保存"></category><category term="备份"></category></entry><entry><title>Django后台列表添加扩展列表列，字段内容以链接方式实现的方法</title><link href="http://snailhome.github.io/note/extend_admin_in_django.html" rel="alternate"></link><published>2015-09-17T13:27:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-17:note/extend_admin_in_django.html</id><summary type="html">&lt;p&gt;我们先来看一个例子，这是在后台数据表列表页面里添加扩展列，实现扩展操作的一个方法。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# admin.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.core.urlresolvers&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;BlogAdmin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;admin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ModelAdmin&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="n"&gt;list_display&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'title'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'published'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'writer'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'published_date'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'list_operate'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;list_operate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;a href="&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;"&amp;gt;&amp;lt;i class="icon-eye-open" title="查看"&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/a&amp;gt;'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'blog:blog_content'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'blogid'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'操作'&lt;/span&gt;
    &lt;span class="n"&gt;list_operate&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在这里定义一个回调函数&lt;code&gt;def list_operate(self, obj)：&lt;/code&gt;，用于返回一个扩展的链接的&lt;code&gt;html&lt;/code&gt;代码。&lt;/p&gt;
&lt;p&gt;这里同时用到&lt;code&gt;reverse&lt;/code&gt;函数，用来转换链接。&lt;/p&gt;
&lt;p&gt;另外一种是实现在编辑页面添加扩展字段的实现方式，是在models.py里实现的，可以参考 &lt;a href="extend_column_in_django.html"&gt;Djnago的Models里添加扩展字段，在编辑界面里的字段内容以链接方式实现的方法&lt;/a&gt;&lt;/p&gt;</summary></entry><entry><title>Djnago的Models里添加扩展字段，在编辑界面里的字段内容以链接方式实现的方法</title><link href="http://snailhome.github.io/note/extend_column_in_django.html" rel="alternate"></link><published>2015-09-17T13:00:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-09-17:note/extend_column_in_django.html</id><summary type="html">&lt;p&gt;先来看一个例子，该例子是让其在编辑界面里添加了个字段，其字段内容为搜索同姓氏人员的一个链接，该实现是在&lt;code&gt;models.py&lt;/code&gt;里实现的&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# models.py&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils.html&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;format_html&lt;/span&gt;
&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Staff&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;models&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="o"&gt;...&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;seek_same&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;span class="sd"&gt;        编辑界面里的扩展字段的内容以链接方式实现的方法&lt;/span&gt;
&lt;span class="sd"&gt;        """&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;format_html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;a href="../../staff/?first_name__exact={}" target="_blank"&amp;gt;{}&amp;lt;/a&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                           &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;first_name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;seek_same&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'同姓氏人员'&lt;/span&gt;  &lt;span class="c1"&gt;# 短描述：即字段名&lt;/span&gt;
    &lt;span class="c1"&gt;# 显示HTML tag&lt;/span&gt;
    &lt;span class="c1"&gt;# 对于用户提交的数据, 永远不要这么设置!&lt;/span&gt;
    &lt;span class="n"&gt;seek_same&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allow_tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;这里定义了一个&lt;code&gt;def seek_same(self):&lt;/code&gt;的回调函数，用于返回一个扩展字段的内容，由于字段内容的回显会做转码处理，所以在这里我们需要用到一个&lt;code&gt;format_html()&lt;/code&gt;函数，用来直接转成&lt;code&gt;html&lt;/code&gt;格式。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;format_html()&lt;/code&gt; 函数第一个参数为模板字串，模板字串里的变量以"{}"标识，按位置依次与第二个参数及其后的参数对应。&lt;/p&gt;
&lt;p&gt;另外一种是实现在列表里添加扩展列的实现方式，是在&lt;code&gt;admin.py&lt;/code&gt;里实现的，可以参考&lt;a href="extend_admin_in_django.html"&gt;'Django后台列表添加扩展列，字段内容以链接方式实现的方法'&lt;/a&gt;&lt;/p&gt;</summary><category term="Django"></category><category term="扩展字段"></category></entry><entry><title>Fedora下安装Sublime Text 3</title><link href="http://snailhome.github.io/note/install_sublime_text3_in_fedora.html" rel="alternate"></link><published>2015-08-11T23:42:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-08-11:note/install_sublime_text3_in_fedora.html</id><summary type="html">&lt;p&gt;&lt;code&gt;Sublime Text 3&lt;/code&gt; 官网上有 Windown版本的，Ubuntu版本的，MAC版本的，唯独没有 Fedora/RedHat版本的。&lt;/p&gt;
&lt;p&gt;网上找到了安装方法&lt;/p&gt;
&lt;h2 id="4a98b8"&gt;1. 下载安装脚本文件&lt;/h2&gt;
&lt;p&gt;下载32位版本：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://gist.githubusercontent.com/dkd903/531a2409c40c926c66d6/raw/2c83194719f1216a7321e4b48f6b604dc8779faf/Install_Sublime_Text_3.sh -O install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;下载64位版本：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://gist.githubusercontent.com/dkd903/8ba3f51313c1781cc571/raw/f37b1c18547d086cd45e8b484efc518260106ea9/Install_Sublime_Text_3_64.sh -O install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="95a39f"&gt;2. 修改文件属性为可执行&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;chmod +x install-sublime-text.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="5beeca"&gt;3. 执行安装脚本&lt;/h2&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;su -c &lt;span class="s2"&gt;"sh install-sublime-text.sh"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;现在你就可以在从菜单里找到 &lt;code&gt;Sublime Text 3&lt;/code&gt; 了，或者在命令行里执行 &lt;code&gt;subl&lt;/code&gt; 来运行它。&lt;/p&gt;
&lt;p&gt;如果先前你有安装过 &lt;code&gt;Sublime Text 2&lt;/code&gt;，那么安装完成后就会被 &lt;code&gt;Sublime Text 3&lt;/code&gt; 所替代。&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;这里列出脚本内容以供参考：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;
&lt;span class="nv"&gt;SHORTCUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[Desktop Entry]&lt;/span&gt;
&lt;span class="s2"&gt;Name=Sublime Text 3&lt;/span&gt;
&lt;span class="s2"&gt;Comment=Edit text files&lt;/span&gt;
&lt;span class="s2"&gt;Exec=/usr/local/sublime-text-3/sublime_text&lt;/span&gt;
&lt;span class="s2"&gt;Icon=/usr/local/sublime-text-3/Icon/128x128/sublime_text.png&lt;/span&gt;
&lt;span class="s2"&gt;Terminal=false&lt;/span&gt;
&lt;span class="s2"&gt;Type=Application&lt;/span&gt;
&lt;span class="s2"&gt;Encoding=UTF-8&lt;/span&gt;
&lt;span class="s2"&gt;Categories=Utility;TextEditor;"&lt;/span&gt;
&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#!/bin/sh&lt;/span&gt;
&lt;span class="s2"&gt;if [ \${1} == \"--help\" ]; then&lt;/span&gt;
&lt;span class="s2"&gt;    /usr/local/sublime-text-3/sublime_text --help&lt;/span&gt;
&lt;span class="s2"&gt;else&lt;/span&gt;
&lt;span class="s2"&gt;    /usr/local/sublime-text-3/sublime_text \$@ &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;
&lt;span class="s2"&gt;fi"&lt;/span&gt;

curl -L &lt;span class="s2"&gt;"http://c758482.r82.cf2.rackcdn.com/sublime_text_3_build_3059_x64.tar.bz2"&lt;/span&gt; -o &lt;span class="s2"&gt;"/usr/src/Sublime Text 3.tar.bz2"&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; /usr/src
tar -xvjf &lt;span class="s2"&gt;"Sublime Text 3.tar.bz2"&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;"Sublime Text 3"&lt;/span&gt;
mkdir -pv &lt;span class="s2"&gt;"/usr/local/sublime-text-3"&lt;/span&gt;
mv -fv * &lt;span class="s2"&gt;"/usr/local/sublime-text-3/"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SCRIPT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;"/usr/local/bin/subl"&lt;/span&gt;
chmod +x &lt;span class="s2"&gt;"/usr/local/bin/subl"&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SHORTCUT&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &amp;gt; &lt;span class="s2"&gt;"/usr/share/applications/sublime-text-3.desktop"&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Finish!"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="Fedora"></category><category term="Sublime Text 3"></category></entry><entry><title>46 个非常有用的 PHP 代码片段</title><link href="http://snailhome.github.io/code/46_code_4php.html" rel="alternate"></link><published>2015-08-09T17:52:00+08:00</published><author><name>蜗牛</name></author><id>tag:snailhome.github.io,2015-08-09:code/46_code_4php.html</id><summary type="html">&lt;h1 id="df1613"&gt;46 个非常有用的 PHP 代码片段&lt;/h1&gt;
&lt;p&gt;在编写代码的时候有个神奇的工具总是好的！下面这里收集了 40+ PHP 代码片段，可以帮助你开发 PHP 项目。&lt;/p&gt;
&lt;p&gt;这些 PHP 片段对于 PHP 初学者也非常有帮助，非常容易学习，让我们开始学习吧～&lt;/p&gt;
&lt;h3 id="5e852f"&gt;1. 发送 SMS&lt;/h3&gt;
&lt;p&gt;在开发 Web 或者移动应用的时候，经常会遇到需要发送 SMS 给用户，或者因为登录原因，或者是为了发送信息。下面的 PHP 代码就实现了发送 SMS 的功能。&lt;/p&gt;
&lt;p&gt;为了使用任何的语言发送 SMS，需要一个 SMS gateway。大部分的 SMS 会提供一个 API，这里是使用 MSG91 作为 SMS gateway。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function send_sms($mobile,$msg)
{
$authKey = "XXXXXXXXXXX";
date_default_timezone_set("Asia/Kolkata");
$date = strftime("%Y-%m-%d %H:%M:%S");
//Multiple mobiles numbers separated by comma
$mobileNumber = $mobile;

//Sender ID,While using route4 sender id should be 6 characters long.
$senderId = "IKOONK";

//Your message to send, Add URL encoding here.
$message = urlencode($msg);

//Define route 
$route = "template";
//Prepare you post parameters
$postData = array(
    'authkey' =&amp;gt; $authKey,
    'mobiles' =&amp;gt; $mobileNumber,
    'message' =&amp;gt; $message,
    'sender' =&amp;gt; $senderId,
    'route' =&amp;gt; $route
);

//API URL
$url="https://control.msg91.com/sendhttp.php";

// init the resource
$ch = curl_init();
curl_setopt_array($ch, array(
    CURLOPT_URL =&amp;gt; $url,
    CURLOPT_RETURNTRANSFER =&amp;gt; true,
    CURLOPT_POST =&amp;gt; true,
    CURLOPT_POSTFIELDS =&amp;gt; $postData
    //,CURLOPT_FOLLOWLOCATION =&amp;gt; true
));


//Ignore SSL certificate verification
curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);


//get response
$output = curl_exec($ch);
//Print error if any
if(curl_errno($ch))
{
    echo 'error:' . curl_error($ch);
}

curl_close($ch);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中“$authKey = "XXXXXXXXXXX";”需要你输入你的密码，“$senderId = "IKOONK";”需要你输入你的 SenderID。当输入移动号码的时候需要指定国家代码 (比如，美国是 1，印度是 91 )。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
$message = "Hello World";
$mobile = "918112998787";
send_sms($mobile,$message);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="c49a1d"&gt;2. 使用 mandrill 发送邮件&lt;/h3&gt;
&lt;p&gt;Mandrill 是一款强大的 SMTP 提供器。开发者倾向于使用一个第三方 SMTP provider 来获取更好的收件交付。&lt;/p&gt;
&lt;p&gt;下面的函数中，你需要把 “Mandrill.php” 放在同一个文件夹，作为 PHP 文件，这样就可以使用TA来发送邮件。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function send_email($to_email,$subject,$message1)
{
require_once 'Mandrill.php';
$apikey = 'XXXXXXXXXX'; //specify your api key here
$mandrill = new Mandrill($apikey);

$message = new stdClass();
$message-&amp;gt;html = $message1;
$message-&amp;gt;text = $message1;
$message-&amp;gt;subject = $subject;
$message-&amp;gt;from_email = "blog@koonk.com";//Sender Email
$message-&amp;gt;from_name  = "KOONK";//Sender Name
$message-&amp;gt;to = array(array("email" =&amp;gt; $to_email));
$message-&amp;gt;track_opens = true;

$response = $mandrill-&amp;gt;messages-&amp;gt;send($message);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;“$apikey = 'XXXXXXXXXX'; //specify your api key here”这里需要你指定你的 API 密钥（从 Mandrill 账户中获得）。&lt;/p&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
$to = "abc@example.com";
$subject = "This is a test email";
$message = "Hello World!";
send_email($to,$subject,$message);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;为了达到最好的效果，最好按照 Mandrill 的教程去配置 DNS。&lt;/p&gt;
&lt;h3 id="2f6989"&gt;3. PHP 函数：阻止 SQL 注入&lt;/h3&gt;
&lt;p&gt;SQL 注入或者 SQLi 常见的攻击网站的手段，使用下面的代码可以帮助你防止这些工具。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function clean($input)
{
    if (is_array($input))
    {
        foreach ($input as $key =&amp;gt; $val)
         {
            $output[$key] = clean($val);
            // $output[$key] = $this-&amp;gt;clean($val);
        }
    }
    else
    {
        $output = (string) $input;
        // if magic quotes is on then use strip slashes
        if (get_magic_quotes_gpc()) 
        {
            $output = stripslashes($output);
        }
        // $output = strip_tags($output);
        $output = htmlentities($output, ENT_QUOTES, 'UTF-8');
    }
// return the clean text
    return $output;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
$text = "&amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;";
$text = clean($text);
echo $text;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="083da9"&gt;4. 检测用户位置&lt;/h3&gt;
&lt;p&gt;使用下面的函数，可以检测用户是在哪个城市访问你的网站&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function detect_city($ip) {

    $default = 'UNKNOWN';

    $curlopt_useragent = 'Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.9.2) Gecko/20100115 Firefox/3.6 (.NET CLR 3.5.30729)';

    $url = 'http://ipinfodb.com/ip_locator.php?ip=' . urlencode($ip);
    $ch = curl_init();

    $curl_opt = array(
        CURLOPT_FOLLOWLOCATION  =&amp;gt; 1,
        CURLOPT_HEADER      =&amp;gt; 0,
        CURLOPT_RETURNTRANSFER  =&amp;gt; 1,
        CURLOPT_USERAGENT   =&amp;gt; $curlopt_useragent,
        CURLOPT_URL       =&amp;gt; $url,
        CURLOPT_TIMEOUT         =&amp;gt; 1,
        CURLOPT_REFERER         =&amp;gt; 'http://' . $_SERVER['HTTP_HOST'],
    );

    curl_setopt_array($ch, $curl_opt);

    $content = curl_exec($ch);

    if (!is_null($curl_info)) {
        $curl_info = curl_getinfo($ch);
    }

    curl_close($ch);

    if ( preg_match('{&amp;lt;li&amp;gt;City : ([^&amp;lt;]*)&amp;lt;/li&amp;gt;}i', $content, $regs) )  {
        $city = $regs[1];
    }
    if ( preg_match('{&amp;lt;li&amp;gt;State/Province : ([^&amp;lt;]*)&amp;lt;/li&amp;gt;}i', $content, $regs) )  {
        $state = $regs[1];
    }

    if( $city!='' &amp;amp;&amp;amp; $state!='' ){
        $location = $city . ', ' . $state;
        return $location;
    }else{
        return $default; 
    }

}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $ip = $_SERVER['REMOTE_ADDR'];
    $city = detect_city($ip);
    echo $city;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="569b1a"&gt;5. 获取 Web 页面的源代码&lt;/h3&gt;
&lt;p&gt;使用下面的函数，可以获取任意 Web 页面的 HTML 代码&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function display_sourcecode($url)
{
    $lines = file($url);
    $output = "";
    foreach ($lines as $line_num =&amp;gt; $line) { 
        // loop thru each line and prepend line numbers
        $output.= "Line #&amp;lt;b&amp;gt;{$line_num}&amp;lt;/b&amp;gt; : " . htmlspecialchars($line) . "&amp;lt;br&amp;gt;\n";
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $url = "http://blog.koonk.com";
    $source = display_sourcecode($url);
    echo $source;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="a043ae"&gt;6. 计算喜欢你的 Facebook 页面的用户&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function fb_fan_count($facebook_name)
{
    $data = json_decode(file_get_contents("https://graph.facebook.com/".$facebook_name));
    $likes = $data-&amp;gt;likes;
    return $likes;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $page = "koonktechnologies";
    $count = fb_fan_count($page);
    echo $count;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="8bf529"&gt;7. 确定任意图片的主导颜色&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function dominant_color($image)
{
$i = imagecreatefromjpeg($image);
for ($x=0;$x&amp;lt;imagesx($i);$x++) {
    for ($y=0;$y&amp;lt;imagesy($i);$y++) {
        $rgb = imagecolorat($i,$x,$y);
        $r   = ($rgb &amp;gt;&amp;gt; 16) &amp;amp; 0xFF;
        $g   = ($rgb &amp;gt;&amp;gt;  &amp;amp; 0xFF;
        $b   = $rgb &amp;amp; 0xFF;
        $rTotal += $r;
        $gTotal += $g;
        $bTotal += $b;
        $total++;
    }
}
$rAverage = round($rTotal/$total);
$gAverage = round($gTotal/$total);
$bAverage = round($bTotal/$total);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3de73b"&gt;8. whois 查询&lt;/h3&gt;
&lt;p&gt;使用下面的函数可以获取任何域名用户的完整细节&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function whois_query($domain) {

    // fix the domain name:
    $domain = strtolower(trim($domain));
    $domain = preg_replace('/^http:\/\//i', '', $domain);
    $domain = preg_replace('/^www\./i', '', $domain);
    $domain = explode('/', $domain);
    $domain = trim($domain[0]);

    // split the TLD from domain name
    $_domain = explode('.', $domain);
    $lst = count($_domain)-1;
    $ext = $_domain[$lst];

    // You find resources and lists 
    // like these on wikipedia: 
    //
    // http://de.wikipedia.org/wiki/Whois
    //
    $servers = array(
        "biz" =&amp;gt; "whois.neulevel.biz",
        "com" =&amp;gt; "whois.internic.net",
        "us" =&amp;gt; "whois.nic.us",
        "coop" =&amp;gt; "whois.nic.coop",
        "info" =&amp;gt; "whois.nic.info",
        "name" =&amp;gt; "whois.nic.name",
        "net" =&amp;gt; "whois.internic.net",
        "gov" =&amp;gt; "whois.nic.gov",
        "edu" =&amp;gt; "whois.internic.net",
        "mil" =&amp;gt; "rs.internic.net",
        "int" =&amp;gt; "whois.iana.org",
        "ac" =&amp;gt; "whois.nic.ac",
        "ae" =&amp;gt; "whois.uaenic.ae",
        "at" =&amp;gt; "whois.ripe.net",
        "au" =&amp;gt; "whois.aunic.net",
        "be" =&amp;gt; "whois.dns.be",
        "bg" =&amp;gt; "whois.ripe.net",
        "br" =&amp;gt; "whois.registro.br",
        "bz" =&amp;gt; "whois.belizenic.bz",
        "ca" =&amp;gt; "whois.cira.ca",
        "cc" =&amp;gt; "whois.nic.cc",
        "ch" =&amp;gt; "whois.nic.ch",
        "cl" =&amp;gt; "whois.nic.cl",
        "cn" =&amp;gt; "whois.cnnic.net.cn",
        "cz" =&amp;gt; "whois.nic.cz",
        "de" =&amp;gt; "whois.nic.de",
        "fr" =&amp;gt; "whois.nic.fr",
        "hu" =&amp;gt; "whois.nic.hu",
        "ie" =&amp;gt; "whois.domainregistry.ie",
        "il" =&amp;gt; "whois.isoc.org.il",
        "in" =&amp;gt; "whois.ncst.ernet.in",
        "ir" =&amp;gt; "whois.nic.ir",
        "mc" =&amp;gt; "whois.ripe.net",
        "to" =&amp;gt; "whois.tonic.to",
        "tv" =&amp;gt; "whois.tv",
        "ru" =&amp;gt; "whois.ripn.net",
        "org" =&amp;gt; "whois.pir.org",
        "aero" =&amp;gt; "whois.information.aero",
        "nl" =&amp;gt; "whois.domain-registry.nl"
    );

    if (!isset($servers[$ext])){
        die('Error: No matching nic server found!');
    }

    $nic_server = $servers[$ext];

    $output = '';

    // connect to whois server:
    if ($conn = fsockopen ($nic_server, 43)) {
        fputs($conn, $domain."\r\n");
        while(!feof($conn)) {
            $output .= fgets($conn,128);
        }
        fclose($conn);
    }
    else { die('Error: Could not connect to ' . $nic_server . '!'); }

    return $output;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $domain = "http://www.blog.koonk.com";
    $result = whois_query($domain);
    print_r($result);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="6a6918"&gt;9. 验证邮箱地址&lt;/h3&gt;
&lt;p&gt;有时候，当在网站填写表单，用户可能会输入错误的邮箱地址，这个函数可以验证邮箱地址是否有效。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function is_validemail($email)
{
    $check = 0;
    if(filter_var($email,FILTER_VALIDATE_EMAIL))
    {
        $check = 1;
    }
    return $check;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $email = "blog@koonk.com";
    $check = is_validemail($email);
    echo $check;
    // If the output is 1, then email is valid.
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="fcdec9"&gt;10. 获取用户的真实  IP&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function getRealIpAddr()  
{  
    if (!emptyempty($_SERVER['HTTP_CLIENT_IP']))  
    {  
        $ip=$_SERVER['HTTP_CLIENT_IP'];  
    }  
    elseif (!emptyempty($_SERVER['HTTP_X_FORWARDED_FOR']))  
    //to check ip is pass from proxy  
    {  
        $ip=$_SERVER['HTTP_X_FORWARDED_FOR'];  
    }  
    else  
    {  
        $ip=$_SERVER['REMOTE_ADDR'];  
    }  
    return $ip;  
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $ip = getRealIpAddr();
    echo $ip;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="0e14b7"&gt;11. 转换 URL：从字符串变成超链接&lt;/h3&gt;
&lt;p&gt;如果你正在开发论坛，博客或者是一个常规的表单提交，很多时候都要用户访问一个网站。使用这个函数，URL 字符串就可以自动的转换为超链接。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function makeClickableLinks($text) 
{  
     $text = eregi_replace('(((f|ht){1}tp://)[-a-zA-Z0-9@:%_+.~#?&amp;amp;//=]+)',  
     '&amp;lt;a href="\1"&amp;gt;\1&amp;lt;/a&amp;gt;', $text);  
     $text = eregi_replace('([[:space:]()[{}])(www.[-a-zA-Z0-9@:%_+.~#?&amp;amp;//=]+)',  
     '\1&amp;lt;a href="http://\2"&amp;gt;\2&amp;lt;/a&amp;gt;', $text);  
     $text = eregi_replace('([_.0-9a-z-]+@([0-9a-z][0-9a-z-]+.)+[a-z]{2,3})',  
     '&amp;lt;a href="mailto:\1"&amp;gt;\1&amp;lt;/a&amp;gt;', $text);

    return $text;  
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $text = "This is my first post on http://blog.koonk.com";
    $text = makeClickableLinks($text);
    echo $text;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="4a162a"&gt;12. 阻止多个 IP 访问你的网站&lt;/h3&gt;
&lt;p&gt;这个代码片段可以方便你禁止某些特定的 IP 地址访问你的网站&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;if ( !file_exists('blocked_ips.txt') ) {
 $deny_ips = array(
  '127.0.0.1',
  '192.168.1.1',
  '83.76.27.9',
  '192.168.1.163'
 );
} else {
 $deny_ips = file('blocked_ips.txt');
}
// read user ip adress:
$ip = isset($_SERVER['REMOTE_ADDR']) ? trim($_SERVER['REMOTE_ADDR']) : '';

// search current IP in $deny_ips array
if ( (array_search($ip, $deny_ips))!== FALSE ) {
 // address is blocked:
 echo 'Your IP adress ('.$ip.') was blocked!';
 exit;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="524b6e"&gt;13. 强制性文件下载&lt;/h3&gt;
&lt;p&gt;如果你需要下载特定的文件而不用另开新窗口，下面的代码片段可以帮助你。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function force_download($file) 
{ 
    $dir      = "../log/exports/"; 
    if ((isset($file))&amp;amp;&amp;amp;(file_exists($dir.$file))) { 
       header("Content-type: application/force-download"); 
       header('Content-Disposition: inline; filename="' . $dir.$file . '"'); 
       header("Content-Transfer-Encoding: Binary"); 
       header("Content-length: ".filesize($dir.$file)); 
       header('Content-Type: application/octet-stream'); 
       header('Content-Disposition: attachment; filename="' . $file . '"'); 
       readfile("$dir$file"); 
    } else { 
       echo "No file selected"; 
    } 
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;php
    force_download("image.jpg");
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="09d2ee"&gt;14. 创建 JSON 数据&lt;/h3&gt;
&lt;p&gt;使用下面的 PHP 片段可以创建 JSON 数据，可以方便你创建移动应用的 Web 服务&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$json_data = array ('id'=&amp;gt;1,'name'=&amp;gt;"Mohit");
echo json_encode($json_data);
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="a37b2a"&gt;15. 压缩 zip 文件&lt;/h3&gt;
&lt;p&gt;使用下面的 PHP 片段可以即时压缩 zip 文件&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function create_zip($files = array(),$destination = '',$overwrite = false) {  
    //if the zip file already exists and overwrite is false, return false  
    if(file_exists($destination) &amp;amp;&amp;amp; !$overwrite) { return false; }  
    //vars  
    $valid_files = array();  
    //if files were passed in...  
    if(is_array($files)) {  
        //cycle through each file  
        foreach($files as $file) {  
            //make sure the file exists  
            if(file_exists($file)) {  
                $valid_files[] = $file;  
            }  
        }  
    }  
    //if we have good files...  
    if(count($valid_files)) {  
        //create the archive  
        $zip = new ZipArchive();  
        if($zip-&amp;gt;open($destination,$overwrite ? ZIPARCHIVE::OVERWRITE : ZIPARCHIVE::CREATE) !== true) {  
            return false;  
        }  
        //add the files  
        foreach($valid_files as $file) {  
            $zip-&amp;gt;addFile($file,$file);  
        }  
        //debug  
        //echo 'The zip archive contains ',$zip-&amp;gt;numFiles,' files with a status of ',$zip-&amp;gt;status;

        //close the zip -- done!  
        $zip-&amp;gt;close();

        //check to make sure the file exists  
        return file_exists($destination);  
    }  
    else  
    {  
        return false;  
    }  
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $files=array('file1.jpg', 'file2.jpg', 'file3.gif');  
    create_zip($files, 'myzipfile.zip', true); 
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="4e7fc7"&gt;16. 解压文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function unzip($location,$newLocation)
{
        if(exec("unzip $location",$arr)){
            mkdir($newLocation);
            for($i = 1;$i&amp;lt; count($arr);$i++){
                $file = trim(preg_replace("~inflating: ~","",$arr[$i]));
                copy($location.'/'.$file,$newLocation.'/'.$file);
                unlink($location.'/'.$file);
            }
            return TRUE;
        }else{
            return FALSE;
        }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    unzip('test.zip','unziped/test'); //File would be unzipped in unziped/test folder
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="438b77"&gt;17. 缩放图片&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function resize_image($filename, $tmpname, $xmax, $ymax)  
{  
    $ext = explode(".", $filename);  
    $ext = $ext[count($ext)-1];

    if($ext == "jpg" || $ext == "jpeg")  
        $im = imagecreatefromjpeg($tmpname);  
    elseif($ext == "png")  
        $im = imagecreatefrompng($tmpname);  
    elseif($ext == "gif")  
        $im = imagecreatefromgif($tmpname);

    $x = imagesx($im);  
    $y = imagesy($im);

    if($x &amp;lt;= $xmax &amp;amp;&amp;amp; $y &amp;lt;= $ymax)  
        return $im;

    if($x &amp;gt;= $y) {  
        $newx = $xmax;  
        $newy = $newx * $y / $x;  
    }  
    else {  
        $newy = $ymax;  
        $newx = $x / $y * $newy;  
    }

    $im2 = imagecreatetruecolor($newx, $newy);  
    imagecopyresized($im2, $im, 0, 0, 0, 0, floor($newx), floor($newy), $x, $y);  
    return $im2;   
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="8d6fc6"&gt;18. 使用 mail() 发送邮件&lt;/h3&gt;
&lt;p&gt;之前我们提供了如何使用 Mandrill 发送邮件的 PHP 代码片段，但是如果你不想使用第三方服务，那么可以使用下面的 PHP 代码片段。&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function send_mail($to,$subject,$body)
{
    $headers = "From: KOONK\r\n";
    $headers .= "Reply-To: blog@koonk.com\r\n";
    $headers .= "Return-Path: blog@koonk.com\r\n";
    $headers .= "X-Mailer: PHP5\n";
    $headers .= 'MIME-Version: 1.0' . "\n";
    $headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n";
    mail($to,$subject,$body,$headers);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $to = "admin@koonk.com";
    $subject = "This is a test mail";
    $body = "Hello World!";
    send_mail($to,$subject,$body);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="166d24"&gt;19. 把秒转换成天数，小时数和分钟&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function secsToStr($secs) {
    if($secs&amp;gt;=86400){$days=floor($secs/86400);$secs=$secs%86400;$r=$days.' day';if($days&amp;lt;&amp;gt;1){$r.='s';}if($secs&amp;gt;0){$r.=', ';}}
    if($secs&amp;gt;=3600){$hours=floor($secs/3600);$secs=$secs%3600;$r.=$hours.' hour';if($hours&amp;lt;&amp;gt;1){$r.='s';}if($secs&amp;gt;0){$r.=', ';}}
    if($secs&amp;gt;=60){$minutes=floor($secs/60);$secs=$secs%60;$r.=$minutes.' minute';if($minutes&amp;lt;&amp;gt;1){$r.='s';}if($secs&amp;gt;0){$r.=', ';}}
    $r.=$secs.' second';if($secs&amp;lt;&amp;gt;1){$r.='s';}
    return $r;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $seconds = "56789";
    $output = secsToStr($seconds);
    echo $output;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="2dc31c"&gt;20. 数据库连接&lt;/h3&gt;
&lt;p&gt;连接 MySQL 数据库&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $DBNAME = 'koonk';
    $HOST = 'localhost';
    $DBUSER = 'root';
    $DBPASS = 'koonk';
    $CONNECT = mysql_connect($HOST,$DBUSER,$DBPASS);
    if(!$CONNECT)
    {
        echo 'MySQL Error: '.mysql_error();
    }
    $SELECT = mysql_select_db($DBNAME);
    if(!$SELECT)
    {
        echo 'MySQL Error: '.mysql_error();
    }
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="6d426a"&gt;21. 目录清单&lt;/h3&gt;
&lt;p&gt;使用下面的 PHP 代码片段可以在一个目录中列出所有文件和文件夹&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function list_files($dir)
{
    if(is_dir($dir))
    {
        if($handle = opendir($dir))
        {
            while(($file = readdir($handle)) !== false)
            {
                if($file != "." &amp;amp;amp;&amp;amp;amp; $file != ".." &amp;amp;amp;&amp;amp;amp; $file != "Thumbs.db"/*pesky windows, images..*/)
                {
                    echo '&amp;lt;a target="_blank" href="'.$dir.$file.'"&amp;gt;'.$file.'&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;'."\n";
                }
            }
            closedir($handle);
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    list_files("images/"); //This will list all files of images folder
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="aa2c7d"&gt;22. 检测用户语言&lt;/h3&gt;
&lt;p&gt;使用下面的 PHP 代码片段可以检测用户浏览器所使用的语言&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function get_client_language($availableLanguages, $default='en'){
    if (isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
        $langs=explode(',',$_SERVER['HTTP_ACCEPT_LANGUAGE']);
        foreach ($langs as $value){
            $choice=substr($value,0,2);
            if(in_array($choice, $availableLanguages)){
                return $choice;
            }
        }
    } 
    return $default;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="776e06"&gt;23. 查看 CSV 文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function readCSV($csvFile){
    $file_handle = fopen($csvFile, 'r');
    while (!feof($file_handle) ) {
        $line_of_text[] = fgetcsv($file_handle, 1024);
    }
    fclose($file_handle);
    return $line_of_text;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $csvFile = "test.csv";
    $csv = readCSV($csvFile);
    $a = csv[0][0]; // This will get value of Column 1 &amp;amp; Row 1
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="e2647d"&gt;24. 从 PHP 数据创建 CSV 文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function generateCsv($data, $delimiter = ',', $enclosure = '"') {
   $handle = fopen('php://temp', 'r+');
   foreach ($data as $line) {
           fputcsv($handle, $line, $delimiter, $enclosure);
   }
   rewind($handle);
   while (!feof($handle)) {
           $contents .= fread($handle, 8192);
   }
   fclose($handle);
   return $contents;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $data[0] = "apple";
    $data[1] = "oranges";
    generateCsv($data, $delimiter = ',', $enclosure = '"');
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="330684"&gt;25. 解析 XML 数据&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$xml_string="&amp;lt;?xml version='1.0'?&amp;gt;
&amp;lt;moleculedb&amp;gt;
    &amp;lt;molecule name='Benzine'&amp;gt;
        &amp;lt;symbol&amp;gt;ben&amp;lt;/symbol&amp;gt;
        &amp;lt;code&amp;gt;A&amp;lt;/code&amp;gt;
    &amp;lt;/molecule&amp;gt;
    &amp;lt;molecule name='Water'&amp;gt;
        &amp;lt;symbol&amp;gt;h2o&amp;lt;/symbol&amp;gt;
        &amp;lt;code&amp;gt;K&amp;lt;/code&amp;gt;
    &amp;lt;/molecule&amp;gt;
&amp;lt;/moleculedb&amp;gt;";

//load the xml string using simplexml function
$xml = simplexml_load_string($xml_string);

//loop through the each node of molecule
foreach ($xml-&amp;gt;molecule as $record)
{
   //attribute are accessted by
   echo $record['name'], '  ';
   //node are accessted by -&amp;gt; operator
   echo $record-&amp;gt;symbol, '  ';
   echo $record-&amp;gt;code, '&amp;lt;br /&amp;gt;';
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="88404a"&gt;26. 解析 JSON 数据&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$json_string='{"id":1,"name":"rolf","country":"russia","office":["google","oracle"]} ';
$obj=json_decode($json_string);
//print the parsed data
echo $obj-&amp;gt;name; //displays rolf
echo $obj-&amp;gt;office[0]; //displays google
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="e284be"&gt;27. 获取当前页面 URL&lt;/h3&gt;
&lt;p&gt;这个 PHP 片段可以帮助你让用户登录后直接跳转到之前浏览的页面&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function current_url()
{
$url = "http://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
$validURL = str_replace("&amp;amp;", "&amp;amp;amp;", $url);
return validURL;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    echo "Currently you are on: ".current_url();
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="a29d24"&gt;28. 从任意的 Twitter 账号获取最新的 Tweet&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function my_twitter($username) 
{
     $no_of_tweets = 1;
     $feed = "http://search.twitter.com/search.atom?q=from:" . $username . "&amp;amp;rpp=" . $no_of_tweets;
     $xml = simplexml_load_file($feed);
    foreach($xml-&amp;gt;children() as $child) {
        foreach ($child as $value) {
            if($value-&amp;gt;getName() == "link") $link = $value['href'];
            if($value-&amp;gt;getName() == "content") {
                $content = $value . "";
        echo '&amp;lt;p class="twit"&amp;gt;'.$content.' &amp;lt;a class="twt" href="'.$link.'" title=""&amp;gt;&amp;amp;nbsp; &amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;';
            }    
        }
    }    
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $handle = "koonktech";
    my_twitter($handle);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="c04b6b"&gt;29. 转发数量&lt;/h3&gt;
&lt;p&gt;使用这个 PHP 片段可以检测你的页面 URL 有多少转发数量&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function tweetCount($url) {
    $content = file_get_contents("http://api.tweetmeme.com/url_info?url=".$url);
    $element = new SimpleXmlElement($content);
    $retweets = $element-&amp;gt;story-&amp;gt;url_count;
    if($retweets){
        return $retweets;
    } else {
        return 0;
    }
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $url = "http://blog.koonk.com";
    $count = tweetCount($url);
    return $count;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="d1db9a"&gt;30. 计算两个日期的差&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $date1 = date( 'Y-m-d' );
    $date2 = "2015-12-04";
    $diff = abs(strtotime($date2) - strtotime($date1));
    $years = floor($diff / (365*60*60*24));
    $months = floor(($diff - $years * 365*60*60*24) / (30*60*60*24));
    $days = floor(($diff - $years * 365*60*60*24 - $months*30*60*60*24)/ (60*60*24));
    printf("%d years, %d months, %d days\n", $years, $months, $days);
    -------------------------------------------------------- OR
    $date1 = new DateTime("2007-03-24");
    $date2 = new DateTime("2009-06-26");
    $interval = $date1-&amp;gt;diff($date2);
    echo "difference " . $interval-&amp;gt;y . " years, " . $interval-&amp;gt;m." months, ".$interval-&amp;gt;d." days "; 
    // shows the total amount of days (not divided into years, months and days like above)
    echo "difference " . $interval-&amp;gt;days . " days ";
    -------------------------------------------------------- OR


    /**
     * Calculate differences between two dates with precise semantics. Based on PHPs DateTime::diff()
     * implementation by Derick Rethans. Ported to PHP by Emil H, 2011-05-02. No rights reserved.
     * 
     * See here for original code:
     * http://svn.php.net/viewvc/php/php-src/trunk/ext/date/lib/tm2unixtime.c?revision=302890&amp;amp;view=markup
     * http://svn.php.net/viewvc/php/php-src/trunk/ext/date/lib/interval.c?revision=298973&amp;amp;view=markup
     */
    function _date_range_limit($start, $end, $adj, $a, $b, $result)
    {
        if ($result[$a] &amp;lt; $start) {
            $result[$b] -= intval(($start - $result[$a] - 1) / $adj) + 1;
            $result[$a] += $adj * intval(($start - $result[$a] - 1) / $adj + 1);
        }
        if ($result[$a] &amp;gt;= $end) {
            $result[$b] += intval($result[$a] / $adj);
            $result[$a] -= $adj * intval($result[$a] / $adj);
        }
        return $result;
    }
    function _date_range_limit_days($base, $result)
    {
        $days_in_month_leap = array(31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
        $days_in_month = array(31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
        _date_range_limit(1, 13, 12, "m", "y", &amp;amp;$base);
        $year = $base["y"];
        $month = $base["m"];
        if (!$result["invert"]) {
            while ($result["d"] &amp;lt; 0) {
                $month--;
                if ($month &amp;lt; 1) {
                    $month += 12;
                    $year--;
                }
                $leapyear = $year % 400 == 0 || ($year % 100 != 0 &amp;amp;&amp;amp; $year % 4 == 0);
                $days = $leapyear ? $days_in_month_leap[$month] : $days_in_month[$month];
                $result["d"] += $days;
                $result["m"]--;
            }
        } else {
            while ($result["d"] &amp;lt; 0) {
                $leapyear = $year % 400 == 0 || ($year % 100 != 0 &amp;amp;&amp;amp; $year % 4 == 0);
                $days = $leapyear ? $days_in_month_leap[$month] : $days_in_month[$month];
                $result["d"] += $days;
                $result["m"]--;
                $month++;
                if ($month &amp;gt; 12) {
                    $month -= 12;
                    $year++;
                }
            }
        }
        return $result;
    }
    function _date_normalize($base, $result)
    {
        $result = _date_range_limit(0, 60, 60, "s", "i", $result);
        $result = _date_range_limit(0, 60, 60, "i", "h", $result);
        $result = _date_range_limit(0, 24, 24, "h", "d", $result);
        $result = _date_range_limit(0, 12, 12, "m", "y", $result);
        $result = _date_range_limit_days(&amp;amp;$base, &amp;amp;$result);
        $result = _date_range_limit(0, 12, 12, "m", "y", $result);
        return $result;
    }
    /**
     * Accepts two unix timestamps.
     */
    function _date_diff($one, $two)
    {
        $invert = false;
        if ($one &amp;gt; $two) {
            list($one, $two) = array($two, $one);
            $invert = true;
        }
        $key = array("y", "m", "d", "h", "i", "s");
        $a = array_combine($key, array_map("intval", explode(" ", date("Y m d H i s", $one))));
        $b = array_combine($key, array_map("intval", explode(" ", date("Y m d H i s", $two))));
        $result = array();
        $result["y"] = $b["y"] - $a["y"];
        $result["m"] = $b["m"] - $a["m"];
        $result["d"] = $b["d"] - $a["d"];
        $result["h"] = $b["h"] - $a["h"];
        $result["i"] = $b["i"] - $a["i"];
        $result["s"] = $b["s"] - $a["s"];
        $result["invert"] = $invert ? 1 : 0;
        $result["days"] = intval(abs(($one - $two)/86400));
        if ($invert) {
            _date_normalize(&amp;amp;$a, &amp;amp;$result);
        } else {
            _date_normalize(&amp;amp;$b, &amp;amp;$result);
        }
        return $result;
    }
    $date = "2014-12-04 19:37:22";
    echo '&amp;lt;pre&amp;gt;';
    print_r( _date_diff( strtotime($date), time() ) );
    echo '&amp;lt;/pre&amp;gt;'; 
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="d22e1e"&gt;31. 删除文件夹内容&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function Delete($path)
{
    if (is_dir($path) === true)
    {
        $files = array_diff(scandir($path), array('.', '..'));
        foreach ($files as $file)
        {
            Delete(realpath($path) . '/' . $file);
        }
        return rmdir($path);
    }
    else if (is_file($path) === true)
    {
        return unlink($path);
    }
    return false;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $path = "images/";
    Delete($path); // This will delete images folder along with its contents.
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="d7d3c8"&gt;32. 搜索和高亮字符串中的关键字&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function highlighter_text($text, $words)
{
    $split_words = explode( " " , $words );
    foreach($split_words as $word)
    {
        $color = "#4285F4";
        $text = preg_replace("|($word)|Ui" ,
            "&amp;lt;span style=\"color:".$color.";\"&amp;gt;&amp;lt;b&amp;gt;$1&amp;lt;/b&amp;gt;&amp;lt;/span&amp;gt;" , $text );
    }
    return $text;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $string = "I like chocolates and I like apples";
    $words = "apple";
    echo highlighter_text($string ,$words);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="5153c8"&gt;33. 写入文件&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?
    $filename = 'blog.csv';
    $fp = fopen($filename, 'w');
    $output = " Hello ";
    $output .= " World! ";
    $output .= "\r\n";
    fputs($fp, $output);
    fclose($fp);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="0e537e"&gt;34. 根据 URL 下载图片&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function imagefromURL($image,$rename)
{
    $ch = curl_init($image);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_BINARYTRANSFER,1);
    $rawdata=curl_exec ($ch);
    curl_close ($ch);
    $fp = fopen("$rename",'w');
    fwrite($fp, $rawdata); 
    fclose($fp);
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $url = "http://koonk.com/images/logo.png";
    $rename = "koonk.png";
    imagefromURL($url,$rename);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="b9502c"&gt;35. 检测 URL 是否有效&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function isvalidURL($url)
{
$check = 0;
if (filter_var($url, FILTER_VALIDATE_URL) !== false) {
  $check = 1;
}
return $check;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $url = "http://koonk.com";
    $check = checkvalidURL($url);
    echo $check; //if returns 1 then URL is valid.
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="ad4346"&gt;36. 生成二维码&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function qr_code($data, $type = "TXT", $size ='150', $ec='L', $margin='0')  
{
     $types = array("URL" =--&amp;gt; "http://", "TEL" =&amp;gt; "TEL:", "TXT"=&amp;gt;"", "EMAIL" =&amp;gt; "MAILTO:");
    if(!in_array($type,array("URL", "TEL", "TXT", "EMAIL")))
    {
        $type = "TXT";
    }
    if (!preg_match('/^'.$types[$type].'/', $data))
    {
        $data = str_replace("\\", "", $types[$type]).$data;
    }
    $ch = curl_init();
    $data = urlencode($data);
    curl_setopt($ch, CURLOPT_URL, 'http://chart.apis.google.com/chart');
    curl_setopt($ch, CURLOPT_POST, true);
    curl_setopt($ch, CURLOPT_POSTFIELDS, 'chs='.$size.'x'.$size.'&amp;amp;cht=qr&amp;amp;chld='.$ec.'|'.$margin.'&amp;amp;chl='.$data);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HEADER, false);
    curl_setopt($ch, CURLOPT_TIMEOUT, 30);
    $response = curl_exec($ch);
    curl_close($ch);
    return $response;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    header("Content-type: image/png");
    echo qr_code("http://koonk.com", "URL");
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="4e1f7b"&gt;37. 计算两个地图坐标之间的距离&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function getDistanceBetweenPointsNew($latitude1, $longitude1, $latitude2, $longitude2) {
    $theta = $longitude1 - $longitude2;
    $miles = (sin(deg2rad($latitude1)) * sin(deg2rad($latitude2))) + (cos(deg2rad($latitude1)) * cos(deg2rad($latitude2)) * cos(deg2rad($theta)));
    $miles = acos($miles);
    $miles = rad2deg($miles);
    $miles = $miles * 60 * 1.1515;
    $feet = $miles * 5280;
    $yards = $feet / 3;
    $kilometers = $miles * 1.609344;
    $meters = $kilometers * 1000;
    return compact('miles','feet','yards','kilometers','meters'); 
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $point1 = array('lat' =&amp;gt; 40.770623, 'long' =&amp;gt; -73.964367);
    $point2 = array('lat' =&amp;gt; 40.758224, 'long' =&amp;gt; -73.917404);
    $distance = getDistanceBetweenPointsNew($point1['lat'], $point1['long'], $point2['lat'], $point2['long']);
    foreach ($distance as $unit =&amp;gt; $value) {
        echo $unit.': '.number_format($value,4).'&amp;lt;br /&amp;gt;';
    }
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="92cc85"&gt;38. 获取一个特定话题标签的所有 Tweets&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function getTweets($hash_tag) {
    $url = 'http://search.twitter.com/search.atom?q='.urlencode($hash_tag) ;
    echo "&amp;lt;p&amp;gt;Connecting to &amp;lt;strong&amp;gt;$url&amp;lt;/strong&amp;gt; ...&amp;lt;/p&amp;gt;";
    $ch = curl_init($url);
    curl_setopt ($ch, CURLOPT_RETURNTRANSFER, TRUE);
    $xml = curl_exec ($ch);
    curl_close ($ch);
    //If you want to see the response from Twitter, uncomment this next part out:
    //echo "&amp;lt;p&amp;gt;Response:&amp;lt;/p&amp;gt;";
    //echo "&amp;lt;pre&amp;gt;".htmlspecialchars($xml)."&amp;lt;/pre&amp;gt;";
    $affected = 0;
    $twelement = new SimpleXMLElement($xml);
    foreach ($twelement-&amp;gt;entry as $entry) {
        $text = trim($entry-&amp;gt;title);
        $author = trim($entry-&amp;gt;author-&amp;gt;name);
        $time = strtotime($entry-&amp;gt;published);
        $id = $entry-&amp;gt;id;
        echo "&amp;lt;p&amp;gt;Tweet from ".$author.": &amp;lt;strong&amp;gt;".$text."&amp;lt;/strong&amp;gt;  &amp;lt;em&amp;gt;Posted ".date('n/j/y g:i a',$time)."&amp;lt;/em&amp;gt;&amp;lt;/p&amp;gt;";
    }
    return true ;
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="0e1c25"&gt;39. 添加 th,st,nd 或者 rd 作为数字的后缀&lt;/h3&gt;
&lt;p&gt;Friday the 13th&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function ordinal($cdnl){ 
    $test_c = abs($cdnl) % 10; 
    $ext = ((abs($cdnl) %100 &amp;lt; 21 &amp;amp;&amp;amp; abs($cdnl) %100 &amp;gt; 4) ? 'th'
            : (($test_c &amp;lt; 4) ? ($test_c &amp;lt; 3) ? ($test_c &amp;lt; 2) ? ($test_c &amp;lt; 1) 
            ? 'th' : 'st' : 'nd' : 'rd' : 'th')); 
    return $cdnl.$ext; 
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $number = 10;
    echo ordinal($number); //output is 10th
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="870785"&gt;40. 限制文件下载的速度&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    // local file that should be send to the client
    $local_file = 'test-file.zip';
    // filename that the user gets as default
    $download_file = 'your-download-name.zip';

    // set the download rate limit (=&amp;gt; 20,5 kb/s)
    $download_rate = 20.5; 
    if(file_exists($local_file) &amp;amp;&amp;amp; is_file($local_file)) {
        // send headers
        header('Cache-control: private');
        header('Content-Type: application/octet-stream'); 
        header('Content-Length: '.filesize($local_file));
        header('Content-Disposition: filename='.$download_file);

        // flush content
        flush();    
        // open file stream
        $file = fopen($local_file, "r");    
        while(!feof($file)) {

            // send the current file part to the browser
            print fread($file, round($download_rate * 1024));

            // flush the content to the browser
            flush();

            // sleep one second
            sleep(1);    
        }

        // close file stream
        fclose($file);}
    else {
        die('Error: The file '.$local_file.' does not exist!');
    }
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="e207df"&gt;41. 把文本转换成图片&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    header("Content-type: image/png");
    $string = $_GET['text'];
    $im = imagecreatefrompng("images/button.png");
    $color = imagecolorallocate($im, 255, 255, 255);
    $px = (imagesx($im) - 7.5 * strlen($string)) / 2;
    $py = 9;
    $fontSize = 1;
    imagestring($im, fontSize, $px, $py, $string, $color);
    imagepng($im);
    imagedestroy($im);
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="cf1d8a"&gt;42. 获取远程文件的大小&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function remote_filesize($url, $user = "", $pw = "")
{
    ob_start();
    $ch = curl_init($url);
    curl_setopt($ch, CURLOPT_HEADER, 1);
    curl_setopt($ch, CURLOPT_NOBODY, 1);
    if(!empty($user) &amp;amp;&amp;amp; !empty($pw))
    {
        $headers = array('Authorization: Basic ' .  base64_encode("$user:$pw"));
        curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    }
    $ok = curl_exec($ch);
    curl_close($ch);
    $head = ob_get_contents();
    ob_end_clean();
    $regex = '/Content-Length:\s([0-9].+?)\s/';
    $count = preg_match($regex, $head, $matches);
    return isset($matches[1]) ? $matches[1] : "unknown";
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $file = "http://koonk.com/images/logo.png";
    $size = remote_filesize($url);
    echo $size;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="7c6509"&gt;43. 使用 imagebrick 进行 pdf 到图像的转换&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
$pdf_file   = './pdf/demo.pdf';
$save_to    = './jpg/demo.jpg';     //make sure that apache has permissions to write in this folder! (common problem)
//execute ImageMagick command 'convert' and convert PDF to JPG with applied settings
exec('convert "'.$pdf_file.'" -colorspace RGB -resize 800 "'.$save_to.'"', $output, $return_var);
if($return_var == 0) {              //if exec successfuly converted pdf to jpg
    print "Conversion OK";
}
else print "Conversion failed.&amp;lt;br /&amp;gt;".$output;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="3611cc"&gt;44. 使用 tinyurl 生成短网址&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function get_tiny_url($url)  
{  
    $ch = curl_init();  
    $timeout = 5;  
    curl_setopt($ch,CURLOPT_URL,'http://tinyurl.com/api-create.php?url='.$url);  
    curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);  
    curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,$timeout);  
    $data = curl_exec($ch);  
    curl_close($ch);  
    return $data;  
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $url = "http://blog.koonk.com/2015/07/Hello-World";
    $tinyurl = get_tiny_url($url);
    echo $tinyurl;
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="68e182"&gt;45. youtube 下载链接生成器&lt;/h3&gt;
&lt;p&gt;使用下面的 PHP 片段可以让你的用户下载 Youtube 视频&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;function str_between($string, $start, $end)
{ 
$string = " ".$string; $ini = strpos($string,$start); if ($ini == 0) return ""; $ini += strlen($start); $len = strpos($string,$end,$ini) - $ini; return substr($string,$ini,$len); }
function get_youtube_download_link(){
    $youtube_link = $_GET['youtube'];
    $youtube_page = file_get_contents($youtube_link);
    $v_id = str_between($youtube_page, "&amp;amp;video_id=", "&amp;amp;");
    $t_id = str_between($youtube_page, "&amp;amp;t=", "&amp;amp;");
    $flv_link = "http://www.youtube.com/get_video?video_id=$v_id&amp;amp;t=$t_id";
    $hq_flv_link = "http://www.youtube.com/get_video?video_id=$v_id&amp;amp;t=$t_id&amp;amp;fmt=6";
    $mp4_link = "http://www.youtube.com/get_video?video_id=$v_id&amp;amp;t=$t_id&amp;amp;fmt=18";
    $threegp_link = "http://www.youtube.com/get_video?video_id=$v_id&amp;amp;t=$t_id&amp;amp;fmt=17";
    echo "\t\tDownload (right-click &amp;amp;gt; save as)&amp;amp;#58;\n\t\t";
    echo "&amp;lt;a href=\"$flv_link\"&amp;gt;FLV&amp;lt;/a&amp;gt;\n\t\t";
    echo "&amp;lt;a href=\"$hq_flv_link\"&amp;gt;HQ FLV (if available)&amp;lt;/a&amp;gt;\n\t\t";
    echo "&amp;lt;a href=\"$mp4_link\"&amp;gt;MP4&amp;lt;/a&amp;gt;\n\t\t";
    echo "&amp;lt;a href=\"$threegp_link\"&amp;gt;3GP&amp;lt;/a&amp;gt;&amp;lt;br&amp;gt;&amp;lt;br&amp;gt;\n";
}
&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="8b22b3"&gt;46. Facebook 样式的时间戳&lt;/h3&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Facebook (x mins age, y hours ago etc)

function nicetime($date)
{
    if(empty($date)) {
        return "No date provided";
    }

    $periods         = array("second", "minute", "hour", "day", "week", "month", "year", "decade");
    $lengths         = array("60","60","24","7","4.35","12","10");

    $now             = time();
    $unix_date         = strtotime($date);

       // check validity of date
    if(empty($unix_date)) {    
        return "Bad date";
    }
    // is it future date or past date
    if($now &amp;gt; $unix_date) {    
        $difference     = $now - $unix_date;
        $tense         = "ago";

    } else {
        $difference     = $unix_date - $now;
        $tense         = "from now";
    }

    for($j = 0; $difference &amp;gt;= $lengths[$j] &amp;amp;&amp;amp; $j &amp;lt; count($lengths)-1; $j++) {
        $difference /= $lengths[$j];
    }

    $difference = round($difference);

    if($difference != 1) {
        $periods[$j].= "s";
    }

    return "$difference $periods[$j] {$tense}";
}
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;语法：&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;?php
    $date = "2015-07-05 03:45";
    $result = nicetime($date); // 2 days ago
?&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;摘自：&lt;a href="http://www.oschina.net/question/2012764_246023"&gt;开源中国&lt;/a&gt;&lt;/p&gt;</summary><category term="php"></category><category term="code"></category></entry></feed>